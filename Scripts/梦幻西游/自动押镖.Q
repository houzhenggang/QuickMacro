[General]
SyntaxVersion=2
BeginHotkey=114
BeginHotkeyMod=0
PauseHotkey=0
PauseHotkeyMod=0
StopHotkey=114
StopHotkeyMod=1
RunOnce=1
EnableWindow=
MacroID=3eed3739-fa47-4584-bff4-30684473beaf
Description=自动押镖
Enable=0
AutoRun=0
[Repeat]
Type=0
Number=1
[SetupUI]
Type=1
QUI=AutoEscort
[Relative]
SetupOCXFile=
[Comment]
1. 仅支持靠谱助手 0.9.X引擎
2. 请确保焦点在梦幻西游窗口中, 且窗口没有被其他程序遮挡
版本日志:

[Attachment]



[UIPackage]
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


[Script]
// 参数定义 -------------------------------------------------------
Const WIN_VALID_TITLE = "靠谱助手"

// 坐标定义
Const REL_LEFT_BAR_POS_LEFT = 0
Const REL_LEFT_BAR_POS_TOP = 70
Const REL_LEFT_BAR_POS_RIGHT = 65
Const REL_LEFT_BAR_POS_BOTTOM = 230

Const REL_TOP_BAR_POS_LEFT = 180
Const REL_TOP_BAR_POS_TOP = 0
Const REL_TOP_BAR_POS_RIGHT = 470
Const REL_TOP_BAR_POS_BOTTOM = 70

Const REL_RIGHT_BAR_POS_LEFT = 730
Const REL_RIGHT_BAR_POS_TOP = 450
Const REL_RIGHT_BAR_POS_RIGHT = 800
Const REL_RIGHT_BAR_POS_BOTTOM = 600

Const REL_CENTER_MSGBOX_POS_LEFT = 200
Const REL_CENTER_MSGBOX_POS_TOP = 200
Const REL_CENTER_MSGBOX_POS_RIGHT = 600
Const REL_CENTER_MSGBOX_POS_BOTTOM = 400

Const REL_LEFT_TASKLIST_POS_LEFT = 15
Const REL_LEFT_TASKLIST_POS_TOP = 90
Const REL_LEFT_TASKLIST_POS_RIGHT = 150
Const REL_LEFT_TASKLIST_POS_BOTTOM = 350

Const REL_CENTER_TASKLIST_POS_LEFT = 150
Const REL_CENTER_TASKLIST_POS_TOP = 100
Const REL_CENTER_TASKLIST_POS_RIGHT = 770
Const REL_CENTER_TASKLIST_POS_BOTTOM = 420

Const REL_RIGHT_TASKLIST_POS_LEFT = 610
Const REL_RIGHT_TASKLIST_POS_TOP = 130
Const REL_RIGHT_TASKLIST_POS_RIGHT = 800
Const REL_RIGHT_TASKLIST_POS_BOTTOM = 400

Const REL_DIALOG_POS_LEFT = 530
Const REL_DIALOG_POS_TOP = 330
Const REL_DIALOG_POS_RIGHT = 780
Const REL_DIALOG_POS_BOTTOM = 460


// 常量定义
Const PIC_MATCHED_PARAMS = 0.5
Const PIC_MATCHED_PARAMS_PRECISE = 0.9
Const PIC_MATCHED_CHECK_CNT_MAX = 60
Const PIC_MATCHED_CHECK_TIMEOUT = 500

Const COLORS_MATCHED_PARAMS_PRECISE = 0.6
Const COLORS_MATCHED_CHECK_CNT_MAX = 60
Const COLORS_MATCHED_CHECK_TIMEOUT = 500

Const NORMAL_CHECK_TIMEOUT = 500

Const RETRY_CNT_MAX = 3
Const CHECK_WAIT_CNT_MAX = 10
Const SLIDE_MAX = 6
Const SLIDE_RANGE = 120
Const ESCORT_CNT_MAX = 3

Const ENUM_DELAY_TYPE_TOO_SHORT = 0
Const ENUM_DELAY_TYPE_SHORT = 1
Const ENUM_DELAY_TYPE_NORMAL_SHORTER = 2
Const ENUM_DELAY_TYPE_NORMAL = 3
Const ENUM_DELAY_TYPE_LONG = 4
Const ENUM_DELAY_TYPE_TOO_LONG = 5

Const ENUM_LOG_LEVEL_ERR = 0
Const ENUM_LOG_LEVEL_WARN = 1
Const ENUM_LOG_LEVEL_INFO = 2
Const ENUM_LOG_LEVEL_DEBUG = 3

// 提示及错误定义 --------------------------------------------------
Const ERR_NONE = "押镖任务执行完毕"
Const ERR_INVALID_WINDOW = "运行失败, 非法的程序窗口"
Const ERR_BACK_IDEL_FAILED = "回到空闲界面失败"
Const ERR_GET_ESCORT_TASK_FAILED = "获取押镖任务失败"

// 多色匹配参数定义 ------------------------------------------------
Const FLAG_NO_BATTLE_COLORBASE = "F3E7E3"
Const FLAG_NO_BATTEL_COLORLIST = "2|4|D6DEB0,29|-16|492CE4,28|11|4D31C6,26|26|A4EBFE"

Const MSGBOX_EXITGAME_COLORBASE = "6FACDD"
Const MSGBOX_EXITGAME_COLORLIST = "11|7|80B8E1,22|20|8CBDE3,12|17|A1CBE8,19|13|A1CAE7,19|134|8CBDE3,17|146|A1CCE9,12|137|A4CDE9,335|147|9ECBE8,345|137|A0CCE9,342|112|B5D5EB,346|86|ADD2EA,340|57|B8D6EB,244|55|6B8FB2,244|53|2C5D8D,242|51|396795,229|54|396795,226|54|5880A7,213|51|45719C,216|51|4E78A1,175|53|46729C,178|53|2F608F,178|53|2F608F,191|56|30608F,193|56|366593,193|56|366593,125|116|64C4EA,110|115|2A4862,110|111|22374F,250|120|25415B,251|118|3D7494,257|118|5FC1E9,266|117|223952,266|119|21364F"
Const TASK_DAYLY_COLORBASE = "0D346E"
Const TASK_DAYLY_COLORLIST = "2|0|0D346E,4|0|0D346E,6|0|0D346E,0|7|123871,3|7|123871,7|7|123871,0|15|163D75,3|15|163D75,8|15|163D75,24|2|1A3F77,24|11|0B326C,20|11|183E76,28|11|183E76,47|4|0E346E,43|4|1B4178,49|4|1B4178,47|15|173D75,67|3|0E356F,58|6|0D346E,60|6|133972,72|8|123972,72|10|113871"
Const TASK_DAYLY_ESCORT_COLORBASE = "645C4F"
Const TASK_DAYLY_ESCORT_COLORLIST = "-3|6|C9C097,-2|-19|B3B3B3,49|-18|3A506A,99|-14|C4DAEA"

Const TASK_ESCORT_COLORBASE = "D2FFB0"
Const TASK_ESCORT_COLORLIST = "3|8|1B13C8,-13|-6|C4FFFF"

// 进度相关定义
Global gProcessLevel
Global gLastProcess

// 通用函数定义 ----------------------------------------------------
Function getRandom(m,n)
    Randomize
    getRandom = Int(((n-m+1) * Rnd) + m)
End Function

Function delayAsManual(delayType)
	Select Case delayType  
		Case ENUM_DELAY_TYPE_TOO_SHORT
    		Delay 200 + getRandom(-50, 50)
		Case ENUM_DELAY_TYPE_SHORT   
    		Delay 700 + getRandom(- 250 , 250)
    	Case ENUM_DELAY_TYPE_NORMAL_SHORTER   
    		Delay 1200 + getRandom(-250, 250)  
		Case ENUM_DELAY_TYPE_NORMAL  
    		Delay 2000 + getRandom(-250, 250)   
		Case ENUM_DELAY_TYPE_LONG   
    		Delay 3000 + getRandom(-250, 250)   
		Case ENUM_DELAY_TYPE_TOO_LONG   
    		Delay 5000 + getRandom(-250, 250)
		Case Else  
    		Delay 5000 + getRandom(-5000, 5000)
	End Select  
End Function

Function clickAsManual(x, y, rndXMin, rndXMax, rndYMin, rndYMax)
	MoveTo x + getRandom(rndXMin, rndXMax), y + getRandom(rndYMin, rndYMax)
	LeftClick 1
End Function

Function slideDownAsManual(hWnd, left, top, right, bottom, downRange)
	Dim posX, posY
	posX = left + getRandom(0, right - left)
	posY = top + getRandom(downRange, bottom - top)
	
	Delay delayAsManual(ENUM_DELAY_TYPE_TOO_SHORT)
	MoveTo posX, posY	
	LeftDown 1
	Delay delayAsManual(ENUM_DELAY_TYPE_TOO_SHORT)
	MoveTo posX, posY - downRange 
	LeftUp 1
	Delay delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
End Function

Function slideUpAsManual(hWnd, left, top, right, bottom, upRange)
	Dim posX, posY
	posX = left + getRandom(0, right - left)
	posY = top + getRandom(0, bottom - top - upRange)
	
	Delay delayAsManual(ENUM_DELAY_TYPE_TOO_SHORT)
	MoveTo posX, posY
	LeftDown 1
	Delay delayAsManual(ENUM_DELAY_TYPE_TOO_SHORT)
	MoveTo posX, posY + upRange 
	LeftUp 1
	Delay delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
End Function

Function checkPicIsFound(hWnd, left, top, right, bottom, picName, matchParam)
	// 该函数采用轮询方式来避免盲目的长时间等待
	For PIC_MATCHED_CHECK_CNT_MAX
		FindPic left, top, right, bottom, _
			CStr(picName), _
			matchParam, matchedX, matchedY
		If matchedX <> -1 And matchedY <> -1 Then 
			checkPicIsFound = TRUE
			Exit Function
		End If
		
		Delay PIC_MATCHED_CHECK_TIMEOUT
	Next
	
	checkPicIsFound = FALSE
End Function

Function checkPicIsFoundExSlide(hWnd, left, top, right, bottom, picName, matchParam)
	For COLORS_MATCHED_CHECK_CNT_MAX
		For SLIDE_MAX
			FindPic left, top, right, bottom, _
			CStr(picName), _
			matchParam, matchedX, matchedY
			If matchedX <> -1 And matchedY <> -1 Then 
				checkPicIsFoundExSlide = TRUE
				Exit Function
			End If
			
			Call slideDownAsManual(hWnd, _
				left + SLIDE_RANGE/2, top  + SLIDE_RANGE/2, _
				right - SLIDE_RANGE/2, bottom  - SLIDE_RANGE/2, SLIDE_RANGE)
			delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
		Next
		
		For SLIDE_MAX
			FindPic left, top, right, bottom, _
			CStr(picName), _
			matchParam, matchedX, matchedY
			If matchedX <> -1 And matchedY <> -1 Then 
				checkPicIsFoundExSlide = TRUE
				Exit Function
			End If
			
			Call slideUpAsManual(hWnd, _
				left + SLIDE_RANGE/2, top  + SLIDE_RANGE/2, _
				right - SLIDE_RANGE/2, bottom  + SLIDE_RANGE/2, SLIDE_RANGE)
			delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
		Next
		
		Delay COLORS_MATCHED_CHECK_TIMEOUT
	Next
	checkPicIsFoundExSlide = FALSE
End Function

Function checkColorIsFound(hWnd, left, top, right, bottom, colorBase, colorList, matchParam)
	For COLORS_MATCHED_CHECK_CNT_MAX
		posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
			colorBase, colorList, matchParam)
			
		xyArray = Split(posXY, "|")
		matchedX = CInt(xyArray(0))
		matchedY = CInt(xyArray(1))

		If matchedX <> -1 And matchedY <> -1 Then 
			checkColorIsFound = TRUE
			Exit Function
		End If
		
		Delay COLORS_MATCHED_CHECK_TIMEOUT
	Next
	checkColorIsFound = FALSE
End Function

Function checkColorIsFoundExSlide(hWnd, left, top, right, bottom, colorBase, colorList, matchParam)
	For COLORS_MATCHED_CHECK_CNT_MAX
		For SLIDE_MAX
			posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
				colorBase, colorList, matchParam)
				
			xyArray = Split(posXY, "|")
			matchedX = CInt(xyArray(0))
			matchedY = CInt(xyArray(1))
	
			If matchedX <> -1 And matchedY <> -1 Then 
				checkColorIsFoundExSlide = TRUE
				Exit Function
			End If
			
			Call slideDownAsManual(hWnd, _
				left + SLIDE_RANGE/2, top  + SLIDE_RANGE/2, _
				right - SLIDE_RANGE/2, bottom  - SLIDE_RANGE/2, SLIDE_RANGE)
			delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
		Next
		
		For SLIDE_MAX
			posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
				colorBase, colorList, matchParam)
				
			xyArray = Split(posXY, "|")
			matchedX = CInt(xyArray(0))
			matchedY = CInt(xyArray(1))
	
			If matchedX <> -1 And matchedY <> -1 Then 
				checkColorIsFoundExSlide = TRUE
				Exit Function
			End If
			
			Call slideUpAsManual(hWnd, _
				left + SLIDE_RANGE/2, top  + SLIDE_RANGE/2, _
				right - SLIDE_RANGE/2, bottom  + SLIDE_RANGE/2, SLIDE_RANGE)
			delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
		Next
		
		Delay COLORS_MATCHED_CHECK_TIMEOUT
	Next
	checkColorIsFoundExSlide = FALSE
End Function

Function showMsgBox(msgContent)
	MessageBox msgContent
End Function

Function logClear()
	AutoEscort.LogBox.text = ""
End Function

Function logRecord(logLevel, logContent)
	Dim logline
	Select Case logLevel
		Case ENUM_LOG_LEVEL_ERR
			logline = "错误"
		Case ENUM_LOG_LEVEL_WARN
			logline = "警告"
		Case ENUM_LOG_LEVEL_INFO
			logline = "信息"
		Case ENUM_LOG_LEVEL_DEBUG
			logline = "调试"
		Case Else  
    		logline = "日志"	
	End Select
	
	logline = logline + "[" + CStr(Hour(now)) + ":" + CStr(Minute(now)) + ":" + CStr(Second(now)) + "]"
	logline = logline + "------" + CStr(logContent)

	TracePrint logline
	AutoEscort.LogBox.text = logline + vbcrlf + AutoEscort.LogBox.text
End Function

Function processClear()
	gLastProcess = 0
	AutoEscort.EscortProcess.Value = 0
End Function

Function setProcessLevel(curLevel)
	If curLevel < 0 Then 
		gProcessLevel = 0
	Else 
		gProcessLevel = curLevel
	End If
End Function

Function showProcess()
	Dim PROCESS_MAX
	Dim curProcess
	Dim processLevelArr
	PROCESS_MAX = 1000
	processLevelArr = Array(20, 200, 500, 700, 980, PROCESS_MAX)

	For i = 1 To UBound(processLevelArr)
		If i - 1 = gProcessLevel Then 
			curProcess = gLastProcess + 1
			If curProcess > processLevelArr(i - 1) Then 
				curProcess = processLevelArr(i - 1)
			End If
			gLastProcess = curProcess
			
			AutoEscort.EscortProcess.Value = 100 * curProcess / PROCESS_MAX
			showProcess = TRUE
			Exit Function	
		ElseIf i = gProcessLevel Then
			curProcess = gLastProcess + 1
			If curProcess < processLevelArr(i - 1) Then 
				curProcess = processLevelArr(i - 1)
			ElseIf curProcess > processLevelArr(i) Then
				curProcess = processLevelArr(i)
			End If
			gLastProcess = curProcess
			
			AutoEscort.EscortProcess.Value = 100 * curProcess / PROCESS_MAX
			showProcess = TRUE
			Exit Function
		End If
	Next
	
	AutoEscort.EscortProcess.Value = 100
	showProcess = FALSE
End Function

Function clickPicWhenFound(hWnd, left, top, right, bottom, _
	picName, matchParam, _
	rndMinX, rndMaxX, rndMinY, rndMaxY)	
	If TRUE <> checkPicIsFound(hWnd, _
			left, top, right, bottom, _
			picName, matchParam) Then
		clickPicWhenFound = FALSE
		Exit Function
	End If
	
	FindPic left, top, right, bottom, _
			picName, matchParam, matchedX, matchedY
	If matchedX = -1 Or matchedY = -1 Then 
		clickPicWhenFound = FALSE
		Exit Function
	End If
	
	Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
	Call clickAsManual(matchedX, matchedY, rndMinX, rndMaxX, rndMinY, rndMaxY)

	clickPicWhenFound = TRUE
End Function	

Function clickPicWhenFoundExSlide(hWnd, left, top, right, bottom, _
	picName, matchParam, _
	rndMinX, rndMaxX, rndMinY, rndMaxY)	
	If TRUE <> checkPicIsFoundExSlide(hWnd, _
			left, top, right, bottom, _
			picName, matchParam) Then
		clickPicWhenFoundExSlide = FALSE
		Exit Function
	End If
	
	FindPic left, top, right, bottom, _
			picName, matchParam, matchedX, matchedY
	If matchedX = -1 Or matchedY = -1 Then 
		clickPicWhenFoundExSlide = FALSE
		Exit Function
	End If
	
	Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
	Call clickAsManual(matchedX, matchedY, rndMinX, rndMaxX, rndMinY, rndMaxY)

	clickPicWhenFoundExSlide = TRUE
End Function

Function clickColorsWhenFound(hWnd, left, top, right, bottom, _
	colorBase, colorList, matchParam, _
	rndMinX, rndMaxX, rndMinY, rndMaxY)
	If TRUE <> checkColorIsFound(hWnd, _
			left, top, right, bottom, _
			colorBase, colorList, matchParam) Then
		clickColorsWhenFound = FALSE
		Exit Function
	End If
	
	posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
			colorBase, colorList, matchParam)
			
	xyArray = Split(posXY, "|")
	matchedX = CInt(xyArray(0))
	matchedY = CInt(xyArray(1))

	If matchedX = -1 Or matchedY = -1 Then 
		clickColorsWhenFound = FALSE
		Exit Function
	End If
	
	Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
	Call clickAsManual(matchedX, matchedY, rndMinX, rndMaxX, rndMinY, rndMaxY)

	clickColorsWhenFound = TRUE
End Function	

Function clickColorsWhenFoundExSlide(hWnd, left, top, right, bottom, _
	colorBase, colorList, matchParam, _
	rndMinX, rndMaxX, rndMinY, rndMaxY)
	If TRUE <> checkColorIsFoundExSlide(hWnd, _
			left, top, right, bottom, _
			colorBase, colorList, matchParam) Then
		clickColorsWhenFoundExSlide = FALSE
		Exit Function
	End If
	
	posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
			colorBase, colorList, matchParam)
			
	xyArray = Split(posXY, "|")
	matchedX = CInt(xyArray(0))
	matchedY = CInt(xyArray(1))

	If matchedX = -1 Or matchedY = -1 Then 
		clickColorsWhenFoundExSlide = FALSE
		Exit Function
	End If
	
	Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
	Call clickAsManual(matchedX, matchedY, rndMinX, rndMaxX, rndMinY, rndMaxY)

	clickColorsWhenFoundExSlide = TRUE
End Function

// 函数定义 --------------------------------------------------------
Function isWndInvalid(hWnd)
	sTitle = Plugin.Window.GetText(Hwnd)
	If 0 < InStr(sTitle, WIN_VALID_TITLE) Then 
		isWndInvalid = FALSE
		Exit Function
	End If

	isWndInvalid = TRUE
End Function

Function isInBattle(hWnd, left, top, right, bottom)
	FindPic left, top, right, bottom, _
		"Attachment:\Idle_挂机.bmp", _
		PIC_MATCHED_PARAMS, matchedX, matchedY
	If matchedX <> -1 And matchedY <> -1 Then 
		isInBattle = FALSE
		Exit Function
	End If

	isInBattle = TRUE
End Function

Function tryToBackIdle(hWnd, left, top, right, bottom)
	FindPic left, top, right, bottom, _
		"Attachment:\Close.bmp", _
		PIC_MATCHED_PARAMS, matchedX, matchedY
	If matchedX <> - 1  And matchedY <> - 1  Then 
		Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
		Call clickAsManual(matchedX, matchedY, 0, 20, 0, 20)
		tryToBackIdle = TRUE
		Exit Function
	End If 
	
	KeyPress "Esc", 1
	Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
	
	posXY = Plugin.Color.FindMutiColor(left+REL_CENTER_MSGBOX_POS_LEFT, top+REL_CENTER_MSGBOX_POS_TOP, _
		left+REL_CENTER_MSGBOX_POS_RIGHT, top+REL_CENTER_MSGBOX_POS_BOTTOM, _
		MSGBOX_EXITGAME_COLORBASE, MSGBOX_EXITGAME_COLORLIST, COLORS_MATCHED_PARAMS_PRECISE)
			
	xyArray = Split(posXY, "|")
	matchedX = CInt(xyArray(0))
	matchedY = CInt(xyArray(1))
	If matchedX <> -1 And matchedY <> -1 Then 
		// 点掉弹出的退出游戏的消息框
		KeyPress "Esc", 1
	End If
	
	tryToBackIdle = TRUE
End Function

Function backToIdle(hWnd, left, top, right, bottom)
	Call tryToBackIdle(hWnd, left, top, right, bottom)
	
	// 退出时再判断一次
	If TRUE = checkPicIsFound(hWnd, _
		left+REL_LEFT_BAR_POS_LEFT, top+REL_LEFT_BAR_POS_TOP, _
		left+REL_LEFT_BAR_POS_RIGHT, top+REL_LEFT_BAR_POS_BOTTOM, _
		"Attachment:\Idle_福利.bmp", _
		PIC_MATCHED_PARAMS) Then
			
		If TRUE = checkPicIsFound(hWnd, _
			left+REL_LEFT_BAR_POS_LEFT, top+REL_LEFT_BAR_POS_TOP, _
			left+REL_LEFT_BAR_POS_RIGHT, top+REL_LEFT_BAR_POS_BOTTOM, _
			"Attachment:\Idle_福利.bmp", _
			PIC_MATCHED_PARAMS) Then
			backToIdle = TRUE
			Exit Function
		End If
		
	End If
	
	Call tryToBackIdle(hWnd, left, top, right, bottom)
	If TRUE = checkPicIsFound(hWnd, _
		left+REL_LEFT_BAR_POS_LEFT, top+REL_LEFT_BAR_POS_TOP, _
		left+REL_LEFT_BAR_POS_RIGHT, top+REL_LEFT_BAR_POS_BOTTOM, _
		"Attachment:\Idle_福利.bmp", _
		PIC_MATCHED_PARAMS) Then
			
		If TRUE = checkPicIsFound(hWnd, _
			left+REL_LEFT_BAR_POS_LEFT, top+REL_LEFT_BAR_POS_TOP, _
			left+REL_LEFT_BAR_POS_RIGHT, top+REL_LEFT_BAR_POS_BOTTOM, _
			"Attachment:\Idle_福利.bmp", _
			PIC_MATCHED_PARAMS) Then
			backToIdle = TRUE
			Exit Function
		End If
		Call tryToBackIdle(hWnd, left, top, right, bottom)
	End If
	
	backToIdle = FALSE
End Function

Function waitToBattel(hWnd, left, top, right, bottom)
	Dim retryCnt
	retryCnt = 0
	While TRUE <> isInBattle(hWnd, _
					left + REL_TOP_BAR_POS_LEFT, _
					top + REL_TOP_BAR_POS_TOP, _
					left + REL_TOP_BAR_POS_RIGHT, _
					top + REL_TOP_BAR_POS_BOTTOM)
		delayAsManual (ENUM_DELAY_TYPE_TOO_LONG)
		retryCnt = retryCnt + 1
		If (retryCnt > RETRY_CNT_MAX) Then
			waitToBattel = FALSE
			Exit Function
		End If
	Wend
	waitToBattel = TRUE
End Function

Function runEscortTask(hWnd, left, top, right, bottom)
	If TRUE <> clickPicWhenFound(hWnd, _
		left+REL_TOP_BAR_POS_LEFT, top+REL_TOP_BAR_POS_TOP, _
		left+REL_TOP_BAR_POS_RIGHT, top+REL_TOP_BAR_POS_BOTTOM, _
		"Attachment:\Idle_活动.bmp", PIC_MATCHED_PARAMS, _
		-8, 40, -2, 3) Then
		Call logRecord(ENUM_LOG_LEVEL_WARN, "没有找到活动界面")
		runEscortTask = FALSE
		Exit Function
	End If

	// 此处需要等待, 有红点活动时, 若太快切换会又被切回来
	delayAsManual(ENUM_DELAY_TYPE_NORMAL)
	
	If TRUE <> clickColorsWhenFound(hWnd, _
		left+REL_LEFT_TASKLIST_POS_LEFT, top+REL_LEFT_TASKLIST_POS_TOP, _
		left+REL_LEFT_TASKLIST_POS_RIGHT, top+REL_LEFT_TASKLIST_POS_BOTTOM, _
		TASK_DAYLY_COLORBASE, TASK_DAYLY_COLORLIST, _
		COLORS_MATCHED_PARAMS_PRECISE, _
		10, 80, -10, 20) Then
		Call logRecord(ENUM_LOG_LEVEL_WARN, "没有找到日常活动")
	End If
	
	delayAsManual(ENUM_DELAY_TYPE_NORMAL)
	If TRUE <> clickColorsWhenFoundExSlide(hWnd, _
		left+REL_CENTER_TASKLIST_POS_LEFT, top+REL_CENTER_TASKLIST_POS_TOP, _
		left+REL_CENTER_TASKLIST_POS_RIGHT, top+REL_CENTER_TASKLIST_POS_BOTTOM, _
		TASK_DAYLY_ESCORT_COLORBASE, TASK_DAYLY_ESCORT_COLORLIST, _
		COLORS_MATCHED_PARAMS_PRECISE, _
		200, 240, -15, 15) Then
		Call logRecord(ENUM_LOG_LEVEL_WARN, "找不到押镖任务, 已经完成?")
		runEscortTask = FALSE
		Exit Function
	End If
	
	// 此时已经来到镖头附近, 取消掉本次弹出的对话
	If TRUE <> checkPicIsFound(hWnd, _
				left+REL_DIALOG_POS_LEFT, top+REL_DIALOG_POS_TOP, _
				left+REL_DIALOG_POS_RIGHT, top+REL_DIALOG_POS_BOTTOM, _
				"Attachment:\Dialog_押送普通镖银.bmp", PIC_MATCHED_PARAMS_PRECISE) Then
				Call logRecord(ENUM_LOG_LEVEL_WARN, "选择押送普通镖银失败")
				runEscortTask = FALSE
				Exit Function
	End If
	delayAsManual(ENUM_DELAY_TYPE_SHORT)
	KeyPress "Esc", 1
	
	Dim curNum
	curNum = 0
	While TRUE
		If TRUE <> isInBattle(hWnd, _
					left + REL_TOP_BAR_POS_LEFT, _
					top + REL_TOP_BAR_POS_TOP, _
					left + REL_TOP_BAR_POS_RIGHT, _
					top + REL_TOP_BAR_POS_BOTTOM) Then
			If TRUE <> clickColorsWhenFound(hWnd, _
				left, top, right, bottom, _
				TASK_ESCORT_COLORBASE, TASK_ESCORT_COLORLIST, _
				COLORS_MATCHED_PARAMS_PRECISE, _
				35, 50, 55, 90) Then
				Call logRecord(ENUM_LOG_LEVEL_WARN, "与郑镖头对话失败")
				runEscortTask = FALSE
				Exit Function
			End If		
							
			If TRUE <> clickPicWhenFound(hWnd, _
				left+REL_DIALOG_POS_LEFT, top+REL_DIALOG_POS_TOP, _
				left+REL_DIALOG_POS_RIGHT, top+REL_DIALOG_POS_BOTTOM, _
				"Attachment:\Dialog_押送普通镖银.bmp", PIC_MATCHED_PARAMS_PRECISE, _
				0, 200, 0, 35) Then
				Call logRecord(ENUM_LOG_LEVEL_WARN, "选择押送普通镖银失败")
				runEscortTask = FALSE
				Exit Function
			End If
			
			If TRUE <> clickPicWhenFound(hWnd, _
					left+REL_CENTER_MSGBOX_POS_LEFT, top+REL_CENTER_MSGBOX_POS_TOP, _
					left+REL_CENTER_MSGBOX_POS_RIGHT, top+REL_CENTER_MSGBOX_POS_BOTTOM, _
					"Attachment:\Confirm_是否押送普通镖银.bmp", PIC_MATCHED_PARAMS_PRECISE, _
					200, 300, 100, 130) Then
				Call logRecord(ENUM_LOG_LEVEL_WARN, "确认押送普通镖银失败")
				runEscortTask = FALSE
				Exit Function
			End If
			curNum = curNum + 1
			
			// 等待弹出押镖的界面
			Call setProcessLevel(curNum + 1)
			delayAsManual (ENUM_DELAY_TYPE_NORMAL)
			Call logRecord(ENUM_LOG_LEVEL_INFO, "押送普通镖银, 第" + CStr(curNum) + "次")
			
			Call waitToBattel(hWnd, left, top, right, bottom)
		End If
	
		If curNum >= ESCORT_CNT_MAX Then 
			runEscortTask = TRUE
			Exit Function
		End If
	
		Delay NORMAL_CHECK_TIMEOUT
	Wend

End Function

Function main()
	hCurWnd = Plugin.Window.GetKeyFocusWnd()
	If isNull(hCurWnd) Then
		Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_INVALID_WINDOW)
		main = FALSE
		Exit Function
	End If
	
	sCurRect =Plugin.Window.GetClientRect(hCurWnd)
	If -1 = sCurRect Then
		Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_INVALID_WINDOW)
		main = FALSE
		Exit Function
	End If
	arrRect = Split(sCurRect, "|")
	posLeft = Clng(arrRect(0))
	posTop = Clng(arrRect(1))
	posRight = Clng(arrRect(2))
	posBottom = Clng(arrRect(3))
	
	Call logRecord(ENUM_LOG_LEVEL_DEBUG, "窗口坐标为 " + _
		arrRect(0) + " " + arrRect(1) + " " + _
		arrRect(2) + " " + arrRect(3))
	If isWndInvalid(hCurWnd) Then 
		Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_INVALID_WINDOW)
		main = FALSE
		Exit Function
	End If
	
	// Step 1: 回到初始界面, 准备押镖
	Call setProcessLevel(0)
	Call logRecord(ENUM_LOG_LEVEL_INFO, "回到初始界面, 准备押镖任务")
	If TRUE <> backToIdle(hCurWnd, posLeft, posTop, posRight, posBottom) Then 
		Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_BACK_IDEL_FAILED)
		main = FALSE
		Exit Function
	End If
	
	// Step 2: 领取押镖任务
	Call setProcessLevel(1)
	Call logRecord(ENUM_LOG_LEVEL_INFO, "领取押镖任务中...")
	If TRUE <> runEscortTask(hCurWnd, posLeft, posTop, posRight, posBottom) Then 
		Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_GET_ESCORT_TASK_FAILED)
		main = FALSE
		Exit Function
	End If
	
End Function

// 主程序 ----------------------------------------------------------
Sub fakeProcess()
	setProcessLevel(0)
	While showProcess()
		Delay NORMAL_CHECK_TIMEOUT
	Wend
End Sub

Call logClear()
Call processClear()

Call logRecord(ENUM_LOG_LEVEL_INFO, "押镖程序开始执行")
BeginThread fakeProcess()
Call main()
Call setProcessLevel(100)
Call logRecord(ENUM_LOG_LEVEL_INFO, "押镖程序执行完毕")
