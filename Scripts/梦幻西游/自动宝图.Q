[General]
SyntaxVersion=2
BeginHotkey=114
BeginHotkeyMod=0
PauseHotkey=0
PauseHotkeyMod=0
StopHotkey=114
StopHotkeyMod=1
RunOnce=1
EnableWindow=
MacroID=4be4b206-f414-4111-bb74-a02c6f677e65
Description=×Ô¶¯±¦Í¼
Enable=0
AutoRun=0
[Repeat]
Type=0
Number=1
[SetupUI]
Type=1
QUI=AutoMaps
[Relative]
SetupOCXFile=
[Comment]

[Attachment]



[UIPackage]
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


[Script]
// ²ÎÊý¶¨Òå -------------------------------------------------------
Const WIN_VALID_TITLE = "¿¿Æ×ÖúÊÖ"
// ×ø±ê¶¨Òå
Const REL_LEFT_BAR_POS_LEFT = 0
Const REL_LEFT_BAR_POS_TOP = 70
Const REL_LEFT_BAR_POS_RIGHT = 65
Const REL_LEFT_BAR_POS_BOTTOM = 230
Const REL_TOP_BAR_POS_LEFT = 180
Const REL_TOP_BAR_POS_TOP = 0
Const REL_TOP_BAR_POS_RIGHT = 470
Const REL_TOP_BAR_POS_BOTTOM = 70
Const REL_RIGHT_BAR_POS_LEFT = 730
Const REL_RIGHT_BAR_POS_TOP = 450
Const REL_RIGHT_BAR_POS_RIGHT = 800
Const REL_RIGHT_BAR_POS_BOTTOM = 600
Const REL_RIGHT_USER_POS_LEFT = 560
Const REL_RIGHT_USER_POS_TOP = 0
Const REL_RIGHT_USER_POS_RIGHT = 800
Const REL_RIGHT_USER_POS_BOTTOM = 80
Const REL_CENTER_MSGBOX_POS_LEFT = 200
Const REL_CENTER_MSGBOX_POS_TOP = 200
Const REL_CENTER_MSGBOX_POS_RIGHT = 600
Const REL_CENTER_MSGBOX_POS_BOTTOM = 400
Const REL_LEFT_TASKLIST_POS_LEFT = 15
Const REL_LEFT_TASKLIST_POS_TOP = 90
Const REL_LEFT_TASKLIST_POS_RIGHT = 150
Const REL_LEFT_TASKLIST_POS_BOTTOM = 350
Const REL_CENTER_TASKLIST_POS_LEFT = 150
Const REL_CENTER_TASKLIST_POS_TOP = 100
Const REL_CENTER_TASKLIST_POS_RIGHT = 770
Const REL_CENTER_TASKLIST_POS_BOTTOM = 420
Const REL_RIGHT_TASKLIST_POS_LEFT = 610
Const REL_RIGHT_TASKLIST_POS_TOP = 130
Const REL_RIGHT_TASKLIST_POS_RIGHT = 800
Const REL_RIGHT_TASKLIST_POS_BOTTOM = 400
Const REL_DIALOG_POS_LEFT = 530
Const REL_DIALOG_POS_TOP = 330
Const REL_DIALOG_POS_RIGHT = 780
Const REL_DIALOG_POS_BOTTOM = 460
Const REL_PACKAGE_POS_LEFT = 400
Const REL_PACKAGE_POS_TOP = 140
Const REL_PACKAGE_POS_RIGHT = 750
Const REL_PACKAGE_POS_BOTTOM = 550
// ³£Á¿¶¨Òå
Const PIC_MATCHED_PARAMS = 0.5
Const PIC_MATCHED_PARAMS_PRECISE = 0.9
Const PIC_MATCHED_CHECK_CNT_MAX = 60
Const PIC_MATCHED_CHECK_TIMEOUT = 500
Const COLORS_MATCHED_PARAMS_PRECISE = 0.6
Const COLORS_MATCHED_CHECK_CNT_MAX = 60
Const COLORS_MATCHED_CHECK_TIMEOUT = 500
Const NORMAL_CHECK_TIMEOUT = 500
Const RETRY_CNT_MAX = 3
Const CHECK_WAIT_CNT_MAX = 10
Const SLIDE_MAX = 6
Const SLIDE_RANGE = 120
Const ENUM_DELAY_TYPE_TOO_SHORT = 0
Const ENUM_DELAY_TYPE_SHORT = 1
Const ENUM_DELAY_TYPE_NORMAL_SHORTER = 2
Const ENUM_DELAY_TYPE_NORMAL = 3
Const ENUM_DELAY_TYPE_LONG = 4
Const ENUM_DELAY_TYPE_TOO_LONG = 5
Const ENUM_LOG_LEVEL_ERR = 0
Const ENUM_LOG_LEVEL_WARN = 1
Const ENUM_LOG_LEVEL_INFO = 2
Const ENUM_LOG_LEVEL_DEBUG = 3
Const ENUM_STATUS_UNKNOWN = -1
Const ENUM_STATUS_IDLE = 0
Const ENUM_STATUS_LOADING_MAP = 1
Const ENUM_STATUS_BATTLE = 2
Const ENUM_STATUS_HAS_MAP_TASK = 3
// ÌáÊ¾¼°´íÎó¶¨Òå --------------------------------------------------
Const ERR_NONE = "±¦Í¼ÈÎÎñÖ´ÐÐÍê±Ï"
Const ERR_INVALID_WINDOW = "ÔËÐÐÊ§°Ü, ·Ç·¨µÄ³ÌÐò´°¿Ú"
Const ERR_BACK_IDEL_FAILED = "»Øµ½¿ÕÏÐ½çÃæÊ§°Ü"
Const ERR_GET_MAPS_TASK_FAILED = "»ñÈ¡±¦Í¼ÈÎÎñÊ§°Ü"
Const ERR_WAIT_MAPS_TASK_FINISHED_FAILED = "µÈ´ý±¦Í¼ÈÎÎñÍê³ÉÊ§°Ü"
Const ERR_DIG_MAPS_FAILED = "ÍÚÍ¼Ê§°Ü"
Const ERR_WAIT_DIG_MAPS_FINISHED_FAILED = "µÈ´ýÍÚÍ¼Ê§°Ü"
// ¶àÉ«Æ¥Åä²ÎÊý¶¨Òå ------------------------------------------------
Const FLAG_USER_COLORBASE = "0E2FE9"
Const FLAG_USER_COLORLIST = "0|12|F48D1B,2|6|D7E7F4"
Const FLAG_NO_BATTLE_COLORBASE = "F3E7E3"
Const FLAG_NO_BATTEL_COLORLIST = "2|4|D6DEB0,29|-16|492CE4,28|11|4D31C6,26|26|A4EBFE"
Const MSGBOX_EXITGAME_COLORBASE = "6FACDD"
Const MSGBOX_EXITGAME_COLORLIST = "11|7|80B8E1,22|20|8CBDE3,12|17|A1CBE8,19|13|A1CAE7,19|134|8CBDE3,17|146|A1CCE9,12|137|A4CDE9,335|147|9ECBE8,345|137|A0CCE9,342|112|B5D5EB,346|86|ADD2EA,340|57|B8D6EB,244|55|6B8FB2,244|53|2C5D8D,242|51|396795,229|54|396795,226|54|5880A7,213|51|45719C,216|51|4E78A1,175|53|46729C,178|53|2F608F,178|53|2F608F,191|56|30608F,193|56|366593,193|56|366593,125|116|64C4EA,110|115|2A4862,110|111|22374F,250|120|25415B,251|118|3D7494,257|118|5FC1E9,266|117|223952,266|119|21364F"
Const TASK_DAYLY_COLORBASE = "0D346E"
Const TASK_DAYLY_COLORLIST = "2|0|0D346E,4|0|0D346E,6|0|0D346E,0|7|123871,3|7|123871,7|7|123871,0|15|163D75,3|15|163D75,8|15|163D75,24|2|1A3F77,24|11|0B326C,20|11|183E76,28|11|183E76,47|4|0E346E,43|4|1B4178,49|4|1B4178,47|15|173D75,67|3|0E356F,58|6|0D346E,60|6|133972,72|8|123972,72|10|113871"
Const TASK_DAYLY_MAPS_COLORBASE = "5058FD"
Const TASK_DAYLY_MAPS_COLORLIST = "3|-1|B3E691,-19|-3|4EC55F,132|-14|C4DAEA"
Const PACKAGE_MAPS_COLORBASE = "565AF1"
Const PACKAGE_MAPS_COLORLIST = "5|0|B3E68A,22|-14|4EC55F"
Const TASKLIST_MAPS_COLORBASE = "1BD5DA"
Const TASKLIST_MAPS_COLORLIST = "0|7|1CE6ED,39|5|1CF1F9,156|10|293EFF"
Const TASKLIST_MAPS_COLORBASE2 = "1EEAF3"
Const TASKLIST_MAPS_COLORLIST2 = "5|11|1EEAF2,19|5|1DEDF6,39|7|1DEAF3,155|11|2437FC"
// ½ø¶ÈÏà¹Ø¶¨Òå
Global gProcessLevel
Global gLastProcess
// Í¨ÓÃº¯Êý¶¨Òå ----------------------------------------------------
Function getRandom(m,n)
    Randomize
    getRandom = Int(((n-m+1) * Rnd) + m)
End Function
Function delayAsManual(delayType)
    Select Case delayType  
    Case ENUM_DELAY_TYPE_TOO_SHORT
        Delay 200 + getRandom(-50, 50)
    Case ENUM_DELAY_TYPE_SHORT   
        Delay 700 + getRandom(- 250 , 250)
    Case ENUM_DELAY_TYPE_NORMAL_SHORTER   
        Delay 1200 + getRandom(-250, 250)  
    Case ENUM_DELAY_TYPE_NORMAL  
        Delay 2000 + getRandom(-250, 250)   
    Case ENUM_DELAY_TYPE_LONG   
        Delay 3000 + getRandom(-250, 250)   
    Case ENUM_DELAY_TYPE_TOO_LONG   
        Delay 5000 + getRandom(-250, 250)
    Case Else  
        Delay 5000 + getRandom(-5000, 5000)
    End Select  
End Function
Function clickAsManual(x, y, rndXMin, rndXMax, rndYMin, rndYMax)
    MoveTo x + getRandom(rndXMin, rndXMax), y + getRandom(rndYMin, rndYMax)
    LeftClick 1
End Function
Function slideDownAsManual(hWnd, left, top, right, bottom, downRange)
    Dim posX, posY
    posX = left + getRandom(0, right - left)
    posY = top + getRandom(downRange, bottom - top)
    Delay delayAsManual(ENUM_DELAY_TYPE_TOO_SHORT)
    MoveTo posX, posY	
    LeftDown 1
    Delay delayAsManual(ENUM_DELAY_TYPE_TOO_SHORT)
    MoveTo posX, posY - downRange 
    LeftUp 1
    Delay delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
End Function
Function slideUpAsManual(hWnd, left, top, right, bottom, upRange)
    Dim posX, posY
    posX = left + getRandom(0, right - left)
    posY = top + getRandom(0, bottom - top - upRange)
    Delay delayAsManual(ENUM_DELAY_TYPE_TOO_SHORT)
    MoveTo posX, posY
    LeftDown 1
    Delay delayAsManual(ENUM_DELAY_TYPE_TOO_SHORT)
    MoveTo posX, posY + upRange 
    LeftUp 1
    Delay delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
End Function
Function checkPicIsFound(hWnd, left, top, right, bottom, picName, matchParam)
    // ¸Ãº¯Êý²ÉÓÃÂÖÑ¯·½Ê½À´±ÜÃâÃ¤Ä¿µÄ³¤Ê±¼äµÈ´ý
    For PIC_MATCHED_CHECK_CNT_MAX
        FindPic left, top, right, bottom, _
			CStr(picName), _
			matchParam, matchedX, matchedY
        If matchedX <> -1 And matchedY <> -1 Then 
            checkPicIsFound = TRUE
            Exit Function
        End If
        Delay PIC_MATCHED_CHECK_TIMEOUT
    Next
    checkPicIsFound = FALSE
End Function
Function checkPicIsFoundExSlide(hWnd, left, top, right, bottom, picName, matchParam)
    For COLORS_MATCHED_CHECK_CNT_MAX
        For SLIDE_MAX
            FindPic left, top, right, bottom, _
			CStr(picName), _
			matchParam, matchedX, matchedY
            If matchedX <> -1 And matchedY <> -1 Then 
                checkPicIsFoundExSlide = TRUE
                Exit Function
            End If
            Call slideDownAsManual(hWnd, _
				left + SLIDE_RANGE/2, top  + SLIDE_RANGE/2, _
				right - SLIDE_RANGE/2, bottom  - SLIDE_RANGE/2, SLIDE_RANGE)
            delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
        Next
        For SLIDE_MAX
            FindPic left, top, right, bottom, _
			CStr(picName), _
			matchParam, matchedX, matchedY
            If matchedX <> -1 And matchedY <> -1 Then 
                checkPicIsFoundExSlide = TRUE
                Exit Function
            End If
            Call slideUpAsManual(hWnd, _
				left + SLIDE_RANGE/2, top  + SLIDE_RANGE/2, _
				right - SLIDE_RANGE/2, bottom  + SLIDE_RANGE/2, SLIDE_RANGE)
            delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
        Next
        Delay COLORS_MATCHED_CHECK_TIMEOUT
    Next
    checkPicIsFoundExSlide = FALSE
End Function
Function checkColorIsFound(hWnd, left, top, right, bottom, colorBase, colorList, matchParam)
    For COLORS_MATCHED_CHECK_CNT_MAX
        posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
			colorBase, colorList, matchParam)
        xyArray = Split(posXY, "|")
        matchedX = CInt(xyArray(0))
        matchedY = CInt(xyArray(1))
        If matchedX <> -1 And matchedY <> -1 Then 
            checkColorIsFound = TRUE
            Exit Function
        End If
        Delay COLORS_MATCHED_CHECK_TIMEOUT
    Next
    checkColorIsFound = FALSE
End Function
Function checkColorIsFoundExSlide(hWnd, left, top, right, bottom, colorBase, colorList, matchParam)
    For COLORS_MATCHED_CHECK_CNT_MAX
        For SLIDE_MAX
            posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
				colorBase, colorList, matchParam)
            xyArray = Split(posXY, "|")
            matchedX = CInt(xyArray(0))
            matchedY = CInt(xyArray(1))
            If matchedX <> -1 And matchedY <> -1 Then 
                checkColorIsFoundExSlide = TRUE
                Exit Function
            End If
            Call slideDownAsManual(hWnd, _
				left + SLIDE_RANGE/2, top  + SLIDE_RANGE/2, _
				right - SLIDE_RANGE/2, bottom  - SLIDE_RANGE/2, SLIDE_RANGE)
            delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
        Next
        For SLIDE_MAX
            posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
				colorBase, colorList, matchParam)
            xyArray = Split(posXY, "|")
            matchedX = CInt(xyArray(0))
            matchedY = CInt(xyArray(1))
            If matchedX <> -1 And matchedY <> -1 Then 
                checkColorIsFoundExSlide = TRUE
                Exit Function
            End If
            Call slideUpAsManual(hWnd, _
				left + SLIDE_RANGE/2, top  + SLIDE_RANGE/2, _
				right - SLIDE_RANGE/2, bottom  + SLIDE_RANGE/2, SLIDE_RANGE)
            delayAsManual(ENUM_DELAY_TYPE_NORMAL_SHORTER)
        Next
        Delay COLORS_MATCHED_CHECK_TIMEOUT
    Next
    checkColorIsFoundExSlide = FALSE
End Function
Function showMsgBox(msgContent)
    MessageBox msgContent
End Function
Function logClear()
    AutoMaps.LogBox.text = ""
End Function
Function logRecord(logLevel, logContent)
    Dim logline
    Select Case logLevel
    Case ENUM_LOG_LEVEL_ERR
        logline = "´íÎó"
    Case ENUM_LOG_LEVEL_WARN
        logline = "¾¯¸æ"
    Case ENUM_LOG_LEVEL_INFO
        logline = "ÐÅÏ¢"
    Case ENUM_LOG_LEVEL_DEBUG
        logline = "µ÷ÊÔ"
    Case Else  
        logline = "ÈÕÖ¾"	
    End Select
    logline = logline + "[" + CStr(Hour(now)) + ":" + CStr(Minute(now)) + ":" + CStr(Second(now)) + "]"
    logline = logline + "------" + CStr(logContent)
    TracePrint logline
    AutoMaps.LogBox.text = logline + vbcrlf + AutoMaps.LogBox.text
End Function
Function processClear()
    gLastProcess = 0
    AutoMaps.MapProcess.Value = 0
End Function
Function setProcessLevel(curLevel)
    If curLevel < 0 Then 
        gProcessLevel = 0
    Else 
        gProcessLevel = curLevel
    End If
End Function
Function showProcess()
    Dim PROCESS_MAX
    Dim curProcess
    Dim processLevelArr
    PROCESS_MAX = 1000
    processLevelArr = Array(20, 200, 500, 600, 800, 980, PROCESS_MAX)
    For i = 1 To UBound(processLevelArr)
        If i - 1 = gProcessLevel Then 
            curProcess = gLastProcess + 1
            If curProcess > processLevelArr(i - 1) Then 
                curProcess = processLevelArr(i - 1)
            End If
            gLastProcess = curProcess
            AutoMaps.MapProcess.Value = 100 * curProcess / PROCESS_MAX
            showProcess = TRUE
            Exit Function	
        ElseIf i = gProcessLevel Then
            curProcess = gLastProcess + 1
            If curProcess < processLevelArr(i - 1) Then 
                curProcess = processLevelArr(i - 1)
            ElseIf curProcess > processLevelArr(i) Then
                curProcess = processLevelArr(i)
            End If
            gLastProcess = curProcess
            AutoMaps.MapProcess.Value = 100 * curProcess / PROCESS_MAX
            showProcess = TRUE
            Exit Function
        End If
    Next
    AutoMaps.MapProcess.Value = 100
    showProcess = FALSE
End Function
Function clickPicWhenFound(hWnd, left, top, right, bottom, _
	picName, matchParam, _
	rndMinX, rndMaxX, rndMinY, rndMaxY)	
    If TRUE <> checkPicIsFound(hWnd, _
			left, top, right, bottom, _
			picName, matchParam) Then
        clickPicWhenFound = FALSE
        Exit Function
    End If
    FindPic left, top, right, bottom, _
			picName, matchParam, matchedX, matchedY
    If matchedX = -1 Or matchedY = -1 Then 
        clickPicWhenFound = FALSE
        Exit Function
    End If
    Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
    Call clickAsManual(matchedX, matchedY, rndMinX, rndMaxX, rndMinY, rndMaxY)
    clickPicWhenFound = TRUE
End Function	
Function clickPicWhenFoundExSlide(hWnd, left, top, right, bottom, _
	picName, matchParam, _
	rndMinX, rndMaxX, rndMinY, rndMaxY)	
    If TRUE <> checkPicIsFoundExSlide(hWnd, _
			left, top, right, bottom, _
			picName, matchParam) Then
        clickPicWhenFoundExSlide = FALSE
        Exit Function
    End If
    FindPic left, top, right, bottom, _
			picName, matchParam, matchedX, matchedY
    If matchedX = -1 Or matchedY = -1 Then 
        clickPicWhenFoundExSlide = FALSE
        Exit Function
    End If
    Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
    Call clickAsManual(matchedX, matchedY, rndMinX, rndMaxX, rndMinY, rndMaxY)
    clickPicWhenFoundExSlide = TRUE
End Function
Function clickColorsWhenFound(hWnd, left, top, right, bottom, _
	colorBase, colorList, matchParam, _
	rndMinX, rndMaxX, rndMinY, rndMaxY)
    If TRUE <> checkColorIsFound(hWnd, _
			left, top, right, bottom, _
			colorBase, colorList, matchParam) Then
        clickColorsWhenFound = FALSE
        Exit Function
    End If
    posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
			colorBase, colorList, matchParam)
    xyArray = Split(posXY, "|")
    matchedX = CInt(xyArray(0))
    matchedY = CInt(xyArray(1))
    If matchedX = -1 Or matchedY = -1 Then 
        clickColorsWhenFound = FALSE
        Exit Function
    End If
    Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
    Call clickAsManual(matchedX, matchedY, rndMinX, rndMaxX, rndMinY, rndMaxY)
    clickColorsWhenFound = TRUE
End Function	
Function clickColorsWhenFoundExSlide(hWnd, left, top, right, bottom, _
	colorBase, colorList, matchParam, _
	rndMinX, rndMaxX, rndMinY, rndMaxY)
    If TRUE <> checkColorIsFoundExSlide(hWnd, _
			left, top, right, bottom, _
			colorBase, colorList, matchParam) Then
        clickColorsWhenFoundExSlide = FALSE
        Exit Function
    End If
    posXY = Plugin.Color.FindMutiColor(left, top, right, bottom, _
			colorBase, colorList, matchParam)
    xyArray = Split(posXY, "|")
    matchedX = CInt(xyArray(0))
    matchedY = CInt(xyArray(1))
    If matchedX = -1 Or matchedY = -1 Then 
        clickColorsWhenFoundExSlide = FALSE
        Exit Function
    End If
    Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
    Call clickAsManual(matchedX, matchedY, rndMinX, rndMaxX, rndMinY, rndMaxY)
    clickColorsWhenFoundExSlide = TRUE
End Function
// º¯Êý¶¨Òå --------------------------------------------------------
Function isWndInvalid(hWnd)
    sTitle = Plugin.Window.GetText(Hwnd)
    If 0 < InStr(sTitle, WIN_VALID_TITLE) Then 
        isWndInvalid = FALSE
        Exit Function
    End If
    isWndInvalid = TRUE
End Function
Function isInBattle(hWnd, left, top, right, bottom)
    FindPic left, top, right, bottom, _
		"Attachment:\Idle_¹Ò»ú.bmp", _
		PIC_MATCHED_PARAMS, matchedX, matchedY
    If matchedX <> -1 And matchedY <> -1 Then 
        isInBattle = FALSE
        Exit Function
    End If
    isInBattle = TRUE
End Function
Function tryToBackIdle(hWnd, left, top, right, bottom)
    FindPic left, top, right, bottom, _
		"Attachment:\Close.bmp", _
		PIC_MATCHED_PARAMS, matchedX, matchedY
    If matchedX <> - 1  And matchedY <> - 1  Then 
        Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
        Call clickAsManual(matchedX, matchedY, 0, 20, 0, 20)
        tryToBackIdle = TRUE
        Exit Function
    End If 
    KeyPress "Esc", 1
    Call delayAsManual(ENUM_DELAY_TYPE_SHORT)
    posXY = Plugin.Color.FindMutiColor(left+REL_CENTER_MSGBOX_POS_LEFT, top+REL_CENTER_MSGBOX_POS_TOP, _
		left+REL_CENTER_MSGBOX_POS_RIGHT, top+REL_CENTER_MSGBOX_POS_BOTTOM, _
		MSGBOX_EXITGAME_COLORBASE, MSGBOX_EXITGAME_COLORLIST, COLORS_MATCHED_PARAMS_PRECISE)
    xyArray = Split(posXY, "|")
    matchedX = CInt(xyArray(0))
    matchedY = CInt(xyArray(1))
    If matchedX <> -1 And matchedY <> -1 Then 
        // µãµôµ¯³öµÄÍË³öÓÎÏ·µÄÏûÏ¢¿ò
        KeyPress "Esc", 1
    End If
    tryToBackIdle = TRUE
End Function
Function backToIdle(hWnd, left, top, right, bottom)
    Call tryToBackIdle(hWnd, left, top, right, bottom)
    // ÍË³öÊ±ÔÙÅÐ¶ÏÒ»´Î
    If TRUE = checkPicIsFound(hWnd, _
		left+REL_LEFT_BAR_POS_LEFT, top+REL_LEFT_BAR_POS_TOP, _
		left+REL_LEFT_BAR_POS_RIGHT, top+REL_LEFT_BAR_POS_BOTTOM, _
		"Attachment:\Idle_ÉÌ³Ç.bmp", _
		PIC_MATCHED_PARAMS) Then
        If TRUE = checkPicIsFound(hWnd, _
			left+REL_LEFT_BAR_POS_LEFT, top+REL_LEFT_BAR_POS_TOP, _
			left+REL_LEFT_BAR_POS_RIGHT, top+REL_LEFT_BAR_POS_BOTTOM, _
			"Attachment:\Idle_ÉÌ³Ç.bmp", _
			PIC_MATCHED_PARAMS) Then
            backToIdle = TRUE
            Exit Function
        End If
    End If
    Call tryToBackIdle(hWnd, left, top, right, bottom)
    If TRUE = checkPicIsFound(hWnd, _
		left+REL_LEFT_BAR_POS_LEFT, top+REL_LEFT_BAR_POS_TOP, _
		left+REL_LEFT_BAR_POS_RIGHT, top+REL_LEFT_BAR_POS_BOTTOM, _
		"Attachment:\Idle_ÉÌ³Ç.bmp", _
		PIC_MATCHED_PARAMS) Then
        If TRUE = checkPicIsFound(hWnd, _
			left+REL_LEFT_BAR_POS_LEFT, top+REL_LEFT_BAR_POS_TOP, _
			left+REL_LEFT_BAR_POS_RIGHT, top+REL_LEFT_BAR_POS_BOTTOM, _
			"Attachment:\Idle_ÉÌ³Ç.bmp", _
			PIC_MATCHED_PARAMS) Then
            backToIdle = TRUE
            Exit Function
        End If
        Call tryToBackIdle(hWnd, left, top, right, bottom)
    End If
    backToIdle = FALSE
End Function
Function getMapsTask(hWnd, left, top, right, bottom)
    If TRUE <> clickPicWhenFound(hWnd, _
		left+REL_TOP_BAR_POS_LEFT, top+REL_TOP_BAR_POS_TOP, _
		left+REL_TOP_BAR_POS_RIGHT, top+REL_TOP_BAR_POS_BOTTOM, _
		"Attachment:\Idle_»î¶¯.bmp", PIC_MATCHED_PARAMS, _
		-8, 40, -2, 3) Then
        Call logRecord(ENUM_LOG_LEVEL_WARN, "Ã»ÓÐÕÒµ½»î¶¯½çÃæ")
        getMapsTask = FALSE
        Exit Function
    End If
    // ´Ë´¦ÐèÒªµÈ´ý, ÓÐºìµã»î¶¯Ê±, ÈôÌ«¿ìÇÐ»»»áÓÖ±»ÇÐ»ØÀ´
    delayAsManual(ENUM_DELAY_TYPE_NORMAL)
    If TRUE <> clickColorsWhenFound(hWnd, _
		left+REL_LEFT_TASKLIST_POS_LEFT, top+REL_LEFT_TASKLIST_POS_TOP, _
		left+REL_LEFT_TASKLIST_POS_RIGHT, top+REL_LEFT_TASKLIST_POS_BOTTOM, _
		TASK_DAYLY_COLORBASE, TASK_DAYLY_COLORLIST, _
		COLORS_MATCHED_PARAMS_PRECISE, _
		10, 80, -10, 20) Then
        Call logRecord(ENUM_LOG_LEVEL_WARN, "Ã»ÓÐÕÒµ½ÈÕ³£»î¶¯")
    End If
    delayAsManual(ENUM_DELAY_TYPE_NORMAL)
    If TRUE <> clickColorsWhenFoundExSlide(hWnd, _
		left+REL_CENTER_TASKLIST_POS_LEFT, top+REL_CENTER_TASKLIST_POS_TOP, _
		left+REL_CENTER_TASKLIST_POS_RIGHT, top+REL_CENTER_TASKLIST_POS_BOTTOM, _
		TASK_DAYLY_MAPS_COLORBASE, TASK_DAYLY_MAPS_COLORLIST, _
		COLORS_MATCHED_PARAMS_PRECISE, _
		210, 250, -10, 10) Then
        Call logRecord(ENUM_LOG_LEVEL_WARN, "ÕÒ²»µ½±¦Í¼ÈÎÎñ, ÒÑ¾­Íê³É?")
        getMapsTask = FALSE
        Exit Function
    End If
    If TRUE <> clickPicWhenFound(hWnd, _
			left+REL_DIALOG_POS_LEFT, top+REL_DIALOG_POS_TOP, _
			left+REL_DIALOG_POS_RIGHT, top+REL_DIALOG_POS_BOTTOM, _
			"Attachment:\Dialog_ÌýÌýÎÞ·Á.bmp", PIC_MATCHED_PARAMS_PRECISE, _
			0, 200, 0, 35) Then
        Call logRecord(ENUM_LOG_LEVEL_WARN, "ÓëµêÐ¡¶þ¶Ô»°Ê§°Ü")
        getMapsTask = FALSE
        Exit Function
    End If
    // ¹Ø±Õ¶Ô»°¿ò
    delayAsManual (ENUM_DELAY_TYPE_LONG)
    Call logRecord(ENUM_LOG_LEVEL_INFO, "Íê³É¶Ô»°, ¿ªÊ¼´òÍ¼...")
    Call tryToBackIdle(hWnd, left, top, right, bottom)
    getMapsTask = TRUE
End Function
Function getCurStatus(hWnd, left, top, right, bottom)
    // ÊÇ·ñÓµÓÐ±¦Í¼ÈÎÎñ
    posXY = Plugin.Color.FindMutiColor( _
		left+REL_RIGHT_TASKLIST_POS_LEFT, _
		top+REL_RIGHT_TASKLIST_POS_TOP, _
		left+REL_RIGHT_TASKLIST_POS_RIGHT, _
		top+REL_RIGHT_TASKLIST_POS_BOTTOM, _
		TASKLIST_MAPS_COLORBASE, TASKLIST_MAPS_COLORLIST, _
		COLORS_MATCHED_PARAMS_PRECISE)	
    xyArray = Split(posXY, "|")
    matchedX = CInt(xyArray(0))
    matchedY = CInt(xyArray(1))
    If matchedX <> -1 And matchedY <> -1 Then 
        getCurStatus = ENUM_STATUS_HAS_MAP_TASK
        Exit Function
    End If
    posXY = Plugin.Color.FindMutiColor( _
		left+REL_RIGHT_TASKLIST_POS_LEFT, _
		top+REL_RIGHT_TASKLIST_POS_TOP, _
		left+REL_RIGHT_TASKLIST_POS_RIGHT, _
		top+REL_RIGHT_TASKLIST_POS_BOTTOM, _
		TASKLIST_MAPS_COLORBASE2, TASKLIST_MAPS_COLORLIST2, _
		COLORS_MATCHED_PARAMS_PRECISE)	
    xyArray = Split(posXY, "|")
    matchedX = CInt(xyArray(0))
    matchedY = CInt(xyArray(1))
    If matchedX <> -1 And matchedY <> -1 Then 
        getCurStatus = ENUM_STATUS_HAS_MAP_TASK
        Exit Function
    End If
    // ÊÇ·ñÔÚ¼ÓÔØµØÍ¼
    posXY = Plugin.Color.FindMutiColor( _
		left + REL_RIGHT_USER_POS_LEFT, _
		top + REL_RIGHT_USER_POS_TOP, _
		left + REL_RIGHT_USER_POS_RIGHT, _
		bottom + REL_RIGHT_USER_POS_BOTTOM, _
		FLAG_USER_COLORBASE, FLAG_USER_COLORLIST, COLORS_MATCHED_PARAMS_PRECISE)
    xyArray = Split(posXY, "|")
    matchedX = CInt(xyArray(0))
    matchedY = CInt(xyArray(1))
    If matchedX = -1 Or matchedY = -1 Then 
        getCurStatus = ENUM_STATUS_LOADING_MAP
        Exit Function
    End If
    // ÊÇ·ñÔÚÕ½¶·ÖÐ
    FindPic left + REL_TOP_BAR_POS_LEFT, _
		top + REL_TOP_BAR_POS_TOP, _
		left + REL_TOP_BAR_POS_RIGHT, _
		top + REL_TOP_BAR_POS_BOTTOM, _
		"Attachment:\Idle_¹Ò»ú.bmp", _
		PIC_MATCHED_PARAMS, matchedX, matchedY
    If matchedX = -1 And matchedY = -1 Then 
        getCurStatus = ENUM_STATUS_BATTLE
        Exit Function
    End If
    // ÊÇ·ñ´¦ÓÚIdle½çÃæ
    FindPic left+REL_LEFT_BAR_POS_LEFT, _
		top+REL_LEFT_BAR_POS_TOP, _
		left+REL_LEFT_BAR_POS_RIGHT, _
		top+REL_LEFT_BAR_POS_BOTTOM, _
		"Attachment:\Idle_ÉÌ³Ç.bmp", _
		PIC_MATCHED_PARAMS_PRECISE, matchedX, matchedY
    If matchedX <> -1 Or matchedY <> -1 Then 
        FindPic left+REL_LEFT_BAR_POS_LEFT, _
		top+REL_LEFT_BAR_POS_TOP, _
		left+REL_LEFT_BAR_POS_RIGHT, _
		top+REL_LEFT_BAR_POS_BOTTOM, _
		"Attachment:\Idle_¸£Àû.bmp", _
		PIC_MATCHED_PARAMS_PRECISE, matchedX, matchedY
        If matchedX <> - 1  Or matchedY <> - 1  Then 
            getCurStatus = ENUM_STATUS_IDLE
            Exit Function
        End If
    End If
    getCurStatus = ENUM_STATUS_UNKOWN
End Function
Function clickMapTask(hWnd, left, top, right, bottom)
    posXY = Plugin.Color.FindMutiColor( _
		left+REL_RIGHT_TASKLIST_POS_LEFT, _
		top+REL_RIGHT_TASKLIST_POS_TOP, _
		left+REL_RIGHT_TASKLIST_POS_RIGHT, _
		top+REL_RIGHT_TASKLIST_POS_BOTTOM, _
		TASKLIST_MAPS_COLORBASE, TASKLIST_MAPS_COLORLIST, _
		COLORS_MATCHED_PARAMS_PRECISE)	
    xyArray = Split(posXY, "|")
    matchedX = CInt(xyArray(0))
    matchedY = CInt(xyArray(1))
    If matchedX <> -1 And matchedY <> -1 Then 
        Call clickAsManual(matchedX, matchedY, 0, 130, 0, 50) 
        clickMapTask = TRUE
        Exit Function
    End If
    posXY = Plugin.Color.FindMutiColor( _
		left+REL_RIGHT_TASKLIST_POS_LEFT, _
		top+REL_RIGHT_TASKLIST_POS_TOP, _
		left+REL_RIGHT_TASKLIST_POS_RIGHT, _
		top+REL_RIGHT_TASKLIST_POS_BOTTOM, _
		TASKLIST_MAPS_COLORBASE2, TASKLIST_MAPS_COLORLIST2, _
		COLORS_MATCHED_PARAMS_PRECISE)	
    xyArray = Split(posXY, "|")
    matchedX = CInt(xyArray(0))
    matchedY = CInt(xyArray(1))
    If matchedX <> -1 And matchedY <> -1 Then 
        Call clickAsManual(matchedX, matchedY, 0, 130, 0, 50) 
        clickMapTask = TRUE
        Exit Function
    End If
    clickMapTask = FALSE
End Function
Function handlerLongStatus(hWnd, left, top, right, bottom, status)
    Select Case status
    Case ENUM_STATUS_IDLE
        Call logRecord(ENUM_LOG_LEVEL_DEBUG, "¿ÕÏÐ×´Ì¬, ´òÍ¼ÈÎÎñÒÑÍê³É")
        handlerLongStatus = 1
        Exit Function
    Case ENUM_STATUS_LOADING_MAP
        Call logRecord(ENUM_LOG_LEVEL_DEBUG, "¼ÓÔØµØÍ¼ÖÐ...")
    Case ENUM_STATUS_BATTLE
        Call logRecord(ENUM_LOG_LEVEL_DEBUG, "Õ½¶·ÖÐ..")
    Case ENUM_STATUS_HAS_MAP_TASK
        Call logRecord(ENUM_LOG_LEVEL_DEBUG, "µã»÷±¦Í¼ÈÎÎñ, ¼ÌÐø´òÍ¼ÖÐ...")
        Call clickMapTask(hWnd, left, top, right, bottom)
    Case Else
        Call logRecord(ENUM_LOG_LEVEL_DEBUG, "ÆäËû..")
    End Select
    handlerLongStatus = 0
End Function
Function waitMapsTaskFinished(hWnd, left, top, right, bottom)
    Dim curStatusCnt, curStatus, lastStatus
    curStatus = lastStatus = -1
    curStatusCnt = 0
    While TRUE
        curStatus = getCurStatus(hWnd, left, top, right, bottom)
        Select Case curStatus
        Case ENUM_STATUS_IDLE
            //Call logRecord(ENUM_LOG_LEVEL_DEBUG, "¿ÕÏÐ×´Ì¬")
        Case ENUM_STATUS_LOADING_MAP
            //Call logRecord(ENUM_LOG_LEVEL_DEBUG, "¼ÓÔØµØÍ¼ÖÐ...")
        Case ENUM_STATUS_BATTLE
            //Call logRecord(ENUM_LOG_LEVEL_DEBUG, "Õ½¶·ÖÐ..")
        Case ENUM_STATUS_HAS_MAP_TASK
            //Call logRecord(ENUM_LOG_LEVEL_DEBUG, "ÓÐ±¦Í¼ÈÎÎñ..")
        Case Else
            //Call logRecord(ENUM_LOG_LEVEL_DEBUG, "ÆäËû..")
        End Select
        If lastStatus <> curStatus Then 
            lastStatus = curStatus
            curStatusCnt = 0
        Else 
            curStatusCnt = curStatusCnt + 1
        End If
        If curStatusCnt > RETRY_CNT_MAX Then 
            curStatusCnt = 0
            If 0 < handlerLongStatus(hWnd, left, top, right, bottom, curStatus) Then 
                waitMapsTaskFinished = TRUE
                Exit Function
            End If
        End If
        delayAsManual(ENUM_DELAY_TYPE_NORMAL)
    Wend
    // Can't be here
    waitMapsTaskFinished = FALSE
End Function
Function digMaps(hWnd, left, top, right, bottom)
    If TRUE <> clickPicWhenFound(hWnd, _
			left+REL_RIGHT_BAR_POS_LEFT, top+REL_RIGHT_BAR_POS_TOP, _
			left+REL_RIGHT_BAR_POS_RIGHT, top+REL_RIGHT_BAR_POS_BOTTOM, _
			"Attachment:\Idle_°ü¹ü.bmp", PIC_MATCHED_PARAMS, _
			0, 30, 0, 40) Then
        Call logRecord(ENUM_LOG_LEVEL_WARN, "Ã»ÓÐÕÒµ½°ü¹ü½çÃæ")
        digMaps = FALSE
        Exit Function
    End If
    If TRUE <> clickPicWhenFound(hWnd, _
			left+REL_PACKAGE_POS_LEFT, top+REL_PACKAGE_POS_TOP, _
			left+REL_PACKAGE_POS_RIGHT, top+REL_PACKAGE_POS_BOTTOM, _
			"Attachment:\Package_ÕûÀí.bmp", PIC_MATCHED_PARAMS_PRECISE, _
			10, 90, 0, 20) Then
        Call logRecord(ENUM_LOG_LEVEL_WARN, "Ã»ÓÐÕÒµ½ÕûÀí°ü¹üµÄ°´Å¥")
        digMaps = FALSE
        Exit Function
    End If
    If TRUE <> clickColorsWhenFoundExSlide(hWnd, _
			left+REL_PACKAGE_POS_LEFT, top+REL_PACKAGE_POS_TOP, _
			left+REL_PACKAGE_POS_RIGHT, top+REL_PACKAGE_POS_BOTTOM, _
			PACKAGE_MAPS_COLORBASE, PACKAGE_MAPS_COLORLIST, _
			COLORS_MATCHED_PARAMS_PRECISE, _
			-20, 20, -20, 20) Then
        Call logRecord(ENUM_LOG_LEVEL_WARN, "ÔÚ°ü¹üÖÐÃ»ÓÐÕÒµ½±¦Í¼")
        digMaps = FALSE
        Exit Function
    End If
    If TRUE <> clickPicWhenFound(hWnd, _
			left, top, right, bottom, _
			"Attachment:\Package_±¦Í¼_Ê¹ÓÃ.bmp", _
			PIC_MATCHED_PARAMS_PRECISE, _
			0, 100, 0, 30) Then
        Call logRecord(ENUM_LOG_LEVEL_WARN, "Ã»ÓÐÕÒµ½±¦Í¼Ê¹ÓÃ°´Å¥")
        digMaps = FALSE
        Exit Function
    End If
    digMaps = TRUE
End Function
Function waitDigMapsFinished(hWnd, left, top, right, bottom)
    Dim curNum
    curNum = 0
    While TRUE
        If TRUE <> isInBattle(hWnd, _
			left + REL_TOP_BAR_POS_LEFT, _
			top + REL_TOP_BAR_POS_TOP, _
			left + REL_TOP_BAR_POS_RIGHT, _
			top + REL_TOP_BAR_POS_BOTTOM) Then 
            // ²»ÔÚÕ½¶·ÇÒÂÖÑ¯²éÕÒÈÎÎñÊ§°Ü, ÔòÊÓÎªÍê³É
            If TRUE <> clickPicWhenFound(hWnd, _
				left, top, right, bottom, _
				"Attachment:\Idle_±¦Í¼_Ê¹ÓÃ.bmp", PIC_MATCHED_PARAMS_PRECISE, _
				20, 100, 130, 160) Then
                // ÔÙÈ·ÈÏÒ»´Î, ±ÜÃâÒ»´ÎÈ·ÈÏÊ±¼äÌ«¶ÌÎóÅÐ
                If TRUE <> clickPicWhenFound(hWnd, _
					left, top, right, bottom, _
					"Attachment:\Idle_±¦Í¼_Ê¹ÓÃ.bmp", PIC_MATCHED_PARAMS_PRECISE, _
					20, 100, 130, 160)
                    Call logRecord(ENUM_LOG_LEVEL_INFO, "ÍÚÍ¼ÈÎÎñ½áÊø")
                    waitDigMapsFinished = TRUE
                    Exit Function
                End If
            End If
            curNum = curNum + 1
            Call logRecord(ENUM_LOG_LEVEL_INFO, "µÚ" + CStr(curNum) + "´ÎÊ¹ÓÃ±¦Í¼")
        End If
        Delay NORMAL_CHECK_TIMEOUT
    Wend
    // Can't be here
    waitDigMapsFinished = FALSE
End Function
// Ö÷º¯Êý ---------------------------------------------------------
Function main()
    hCurWnd = Plugin.Window.GetKeyFocusWnd()
    If isNull(hCurWnd) Then
        Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_INVALID_WINDOW)
        main = FALSE
        Exit Function
    End If
    sCurRect =Plugin.Window.GetClientRect(hCurWnd)
    If -1 = sCurRect Then
        Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_INVALID_WINDOW)
        main = FALSE
        Exit Function
    End If
    arrRect = Split(sCurRect, "|")
    posLeft = Clng(arrRect(0))
    posTop = Clng(arrRect(1))
    posRight = Clng(arrRect(2))
    posBottom = Clng(arrRect(3))
    Call logRecord(ENUM_LOG_LEVEL_DEBUG, "´°¿Ú×ø±êÎª " + _
		arrRect(0) + " " + arrRect(1) + " " + _
		arrRect(2) + " " + arrRect(3))
    If isWndInvalid(hCurWnd) Then 
        Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_INVALID_WINDOW)
        main = FALSE
        Exit Function
    End If
    
    // Step 1: »Øµ½³õÊ¼½çÃæ, ×¼±¸´òÍ¼
    Call setProcessLevel(0)
    Call logRecord(ENUM_LOG_LEVEL_INFO, "»Øµ½³õÊ¼½çÃæ, ×¼±¸´òÍ¼ÈÎÎñ")
    If TRUE <> backToIdle(hCurWnd, posLeft, posTop, posRight, posBottom) Then 
        Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_BACK_IDEL_FAILED)
        main = FALSE
        Exit Function
    End If
    // Step 2: ÁìÈ¡±¦Í¼ÈÎÎñ
    Call setProcessLevel(1)
    Call logRecord(ENUM_LOG_LEVEL_INFO, "ÁìÈ¡±¦Í¼ÈÎÎñÖÐ...")
    If TRUE <> getMapsTask(hCurWnd, posLeft, posTop, posRight, posBottom) Then 
        Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_GET_MAPS_TASK_FAILED)
        main = FALSE
        Exit Function
    End If
    // Step 3: ¼ì²é±¦Í¼ÊÇ·ñÒÑ¾­´òÍê
    Call setProcessLevel(2)
    Call logRecord(ENUM_LOG_LEVEL_INFO, "µÈ´ý´ò±¦Í¼Íê±Ï...")
    If TRUE <> waitMapsTaskFinished(hCurWnd, posLeft, posTop, posRight, posBottom) Then 
        Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_WAIT_MAPS_TASK_FINISHED_FAILED)
        main = FALSE
        Exit Function
    End If
    // Step 4: »Øµ½³õÊ¼½çÃæ, ×¼±¸ÍÚÍ¼
    Call setProcessLevel(3)
    Call logRecord(ENUM_LOG_LEVEL_INFO, "»Øµ½³õÊ¼½çÃæ, ×¼±¸ÍÚ±¦Í¼")
    If TRUE <> backToIdle(hCurWnd, posLeft, posTop, posRight, posBottom) Then 
        Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_BACK_IDEL_FAILED)
        main = FALSE
        Exit Function
    End If
    // Step 5: ¿ªÊ¼ÍÚÍ¼
    Call setProcessLevel(4)
    Call logRecord(ENUM_LOG_LEVEL_INFO, "¿ªÊ¼ÍÚÍ¼ÈÎÎñ")
    If TRUE <> digMaps(hCurWnd, posLeft, posTop, posRight, posBottom) Then 
        Call logRecord(ENUM_LOG_LEVEL_ERR,ERR_DIG_MAPS_FAILED)
        main = FALSE
        Exit Function
    End If
    // Step 6: µÈ´ýÍÚÍ¼½áÊø
    Call setProcessLevel(5)
    Call logRecord(ENUM_LOG_LEVEL_INFO, "µÈ´ýÍÚÍ¼½áÊø...")
    If TRUE <> waitDigMapsFinished(hCurWnd, posLeft, posTop, posRight, posBottom) Then 
        Call logRecord(ENUM_LOG_LEVEL_ERR, ERR_WAIT_DIG_MAPS_FINISHED_FAILED)
        main = FALSE
        Exit Function
    End If
    Call logRecord(ENUM_LOG_LEVEL_INFO, ERR_NONE)
    main = TRUE
End Function
// Ö÷³ÌÐò ----------------------------------------------------------
Sub fakeProcess()
    setProcessLevel(0)
    While showProcess()
        Delay NORMAL_CHECK_TIMEOUT
    Wend
End Sub
Call logClear()
Call processClear()
Call logRecord(ENUM_LOG_LEVEL_INFO, "±¦Í¼³ÌÐò¿ªÊ¼Ö´ÐÐ")
//BeginThread fakeProcess()
Call main()
Call setProcessLevel(100)
Call logRecord(ENUM_LOG_LEVEL_INFO, "±¦Í¼³ÌÐòÖ´ÐÐÍê±Ï")
