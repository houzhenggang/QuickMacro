[General]
SyntaxVersion=2
BeginHotkey=0
BeginHotkeyMod=0
PauseHotkey=0
PauseHotkeyMod=0
StopHotkey=0
StopHotkeyMod=0
RunOnce=1
EnableWindow=
MacroID=b0f0aa05-6f4b-44c0-9ca2-d276500ce89a
Description=PDMTool
Enable=1
AutoRun=0
[Repeat]
Type=0
Number=1
[SetupUI]
Type=1
QUI=FormGlobal
[Relative]
SetupOCXFile=
[Comment]
可以通过修改模板中的关键字, 定制输出内容.
${userName}                     ------      制作者
${modelL}                       ------      机型名称(小写)
${modelU}                       ------      机型名称(大写)
${oemL}                         ------      oem名称(小写)
${oemU}                         ------      oem名称(大写)
${version}                      ------      软件版本号
${hwVersion}                    ------      硬件版本号
${hwModel}                      ------      硬件型号
${mactoolVersion}               ------      mac工具版本号
${productName}                  ------      产品型号
${productNameTrim}              ------      项目名称(通过产品型号解析出来的)
${boardName}                    ------      主板型号
${fileName}                     ------      img文件名
${fileTime}                     ------      img文件创建时间
${fileMD5}                      ------      img文件MD5
${fileSizeReadableMB}           ------      img文件大小(MB形式)
${fileSizeReadableByte}         ------      img文件大小(字节形式)
${mactoolName}                  ------      mac工具文件名
${mactoolTime}                  ------      mac工具创建时间
${mactoolMD5}                   ------      mac工具MD5
${mactoolSizeReadableMB}        ------      mac工具文件大小(MB形式)
${mactoolSizeReadableByte}      ------      mac工具文件大小(字节形式)
${updateNote}                   ------      img版本更新说明
${timezone}                     ------      时区
${language}                     ------      语言
${mactoolUpdateNote}            ------      mac工具更新说明
${mactoolUpdateReason}          ------      mac工具升级原因

[UIPackage]
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


[Script]
//////////////////////////////////
// Global Flag
Global gRunFlag, gRunPath
gRunFlag = false
Global gKeywordsMapSize, gKeywordsMapSizeByDevice
gKeywordsMapSize = 0
gKeywordsMapSizeByDevice = 0

//////////////////////////////////
// Init Event
Event FormGlobal.Load
    Const PDMTOOL_VERSION = "1.1.0928"
    Const DEIVCE_LIST_NUM = 2
    Const DEVICE_ID_INVALID = - 1 
    Const DEVICE_ID_R47G = 0
    Const DEVICE_ID_R48G = 1
    Const DEVICE_ID_R49P = 2
    Const DEVICE_ID_LIST = "R47G|R48G"
    
    Const UPDATE_REASON_LIST_NUM = 2
    Const UPDATE_REASON_ID_INVALID = -1
    Const UPDATE_REASON_ID_FIRST = 0
    Const UPDATE_REASON_ID_PLAN = 1
    Const UPDATE_REASON_ID_LIST = "首次发行|版本更新, 计划升级"
    
    Const MACTOOL_UPDATE_REASON_LIST_NUM = 2
    Const MACTOOL_UPDATE_REASON_ID_INVALID = -1
    Const MACTOOL_UPDATE_REASON_ID_FIRST = 0
    Const MACTOOL_UPDATE_REASON_ID_PLAN = 1
    Const MACTOOL_UPDATE_REASON_ID_LIST = "首次发行|版本更新, 计划升级"
    
    Const TIPS_SELECT_FILE = "请选择要上PDM的img文件"
    Const TIPS_SELECT_MACTOOL = "请选择要上PDM的mac工具"
    Const TIPS_INPUT_PRODUCT_NAME = "产品型号"
    Const TIPS_INPUT_BOARD_NAME = "主板型号"
    Const TIPS_INPUT_HW_VERSION = "硬件版本"
    Const TIPS_INPUT_HW_MODEL = "硬件型号"
    Const TIPS_INPUT_TIME_ZONE = "时区"
    Const TIPS_INPUT_LANGUAGE = "语言"
    
    Const TIPS_INPUT_UPDATE_REASON = "版本升级原因"
    Const TIPS_INPUT_UPDATE_NOTE= "版本更新说明"
    Const TIPS_INPUT_MACTOOL_UPDATE_REASON = "mac工具升级原因"
    Const TIPS_INPUT_MACTOOL_UPDATE_NOTE = "mac工具更新说明"
    
    Const TIPS_INPUT_RF_FREQ = "RF频率"
	
    SetPDMToolVersion(PDMTOOL_VERSION)
    SetDeviceList(DEVICE_ID_LIST)
    ResetAll 

    gRunPath = CStr(Plugin.Sys.GetDir(0))
    gRunPath = "C:\Users\LinKy\Desktop\PDMTooltest"
End Event

//////////////////////////////////
// Click Event
Event FormGlobal.BtnClearLog.Click
    ClearLog
End Event

Event FormGlobal.BtnOK.Click
	TraceLog "####################################"
    Dim checkRes
    checkRes = true
    checkRes = CheckDevice and checkRes
    checkRes = CheckSelectedFile and checkRes
    checkRes = CheckSelectedMacTool and checkRes
    checkRes = CheckProductName and checkRes
    checkRes = CheckBoardName and checkRes
    checkRes = CheckHwVersion and checkRes
    checkRes = CheckHwModel and checkRes
    checkRes = CheckUpdateNote and checkRes
    checkRes = CheckMactoolUpdateNote and checkRes
    checkRes = CheckTimeZone and checkRes
    checkRes = CheckLanguage and checkRes
    checkRes = CheckUpdateReason and checkRes
    checkRes = CheckMactoolUpdateReason and checkRes

	// 机型相关的检查
	Dim deviceID
    deviceID = GetDeviceIndex
    
    Select Case deviceID
    Case DEVICE_ID_R48G
        checkRes = CheckRfFreq and checkRes

    Case DEVICE_ID_R49P
			
    Case Else
        
    End Select
	
    If false = checkRes Then
        TraceLog "检测失败, 请正确填写PDM所需信息"
    Else 
        TraceLog "生成中, 请稍后..."
        Generate
    End If
	
End Event

Event FormGlobal.BtnReset.Click
    ResetAll
End Event

Event FormGlobal.BtnSelectFile.Click
    Dim filePath
    filePath = Plugin.File.SelectFile()
    If filePath <> "" Then 
        SetSelectedFileNormal
        SetSelectedFile(filePath)
    End If
End Event

Event FormGlobal.BtnSelectMacTool.Click
    Dim filePath
    filePath = Plugin.File.SelectFile()
    If filePath <> "" Then 
        SetSelectedMacToolNormal
        SetSelectedMacTool(filePath)
    End If
End Event

//////////////////////////////////
// Select Event
Event FormGlobal.ComboxDevice.SelectChange
    SetDeviceNormal 
    ResetAllWithoutDevice 
    
    If IsValidDeviceIndex Then 
    	SetGroupBoxInfo (GetDeviceName)
        ShowSelectFile
        ShowSelectMacTool 
        ShowProductName 
        ShowBoardName 
        ShowHwVersion 
        ShowHwModel
        ShowUpdateNote 
        ShowMactoolUpdateNote
        ShowTimeZone 
        ShowLanguage 
        ShowUpdateReason
        ShowMactoolUpdateReason
		
        // 根据机型, 加载对应布局
        Dim deviceID
        deviceID = GetDeviceIndex
        
        Select Case deviceID
        Case DEVICE_ID_R47G
        
    	Case DEVICE_ID_R48G
        	ShowRfFreq
	
    	Case DEVICE_ID_R49P
				
    	Case Else
        	
    	End Select
    End If
End Event


//////////////////////////////////
// Check Function
Function CheckDevice()
    If IsValidDeviceIndex Then
        SetDeviceOK 
        CheckDevice = true
    Else 
        TraceLog "机型信息非法"
        SetDeviceErr 
        CheckDevice = false
    End If
End Function

Function CheckSelectedFile()
    If IsValidSelectedFile Then 
        SetSelectedFileOK 
        CheckSelectedFile = true
    Else 
        TraceLog "请选择正确的img文件"
        SetSelectedFileErr 
        CheckSelectedFile = false
    End If
End Function

Function CheckSelectedMacTool()
    If IsValidSelectedMacTool Then 
        SetSelectedMacToolOK 
        CheckSelectedMacTool = true
    Else 
        TraceLog "请选择正确的mac工具"
        SetSelectedMacToolErr
        CheckSelectedMacTool = false
    End If
End Function

Function CheckProductName()
	If IsValidProductName Then 
        SetProductNameOK 
        CheckProductName = true
    Else 
        TraceLog "产品型号不能为空"
        SetProductNameErr
        CheckProductName = false
    End If
End Function

Function CheckBoardName()
	If IsValidBoardName Then 
        SetBoardNameOK 
        CheckBoardName = true
    Else 
        TraceLog "主板型号不能为空"
        SetBoardNameErr
        CheckBoardName = false
    End If
End Function

Function CheckHwVersion()
	If IsValidHwVersion Then 
        SetHwVersionOK 
        CheckHwVersion = true
    Else 
        TraceLog "硬件型号不能为空"
        SetHwVersionErr
        CheckHwVersion = false
    End If
End Function

Function CheckHwModel()
	If IsValidHwModel Then 
        SetHwModelOK 
        CheckHwModel = true
    Else 
        TraceLog "硬件型号不能为空"
        SetHwModelErr
        CheckHwModel = false
    End If
End Function

Function CheckUpdateNote()
	If IsValidUpdateNote Then 
        SetUpdateNoteOK 
        CheckUpdateNote = true
    Else 
        TraceLog "更新说明填写有误"
        SetUpdateNoteErr
        CheckUpdateNote = false
    End If
End Function

Function CheckTimeZone()
	If IsValidTimeZone Then 
        SetTimeZoneOK 
        CheckTimeZone = true
    Else 
        TraceLog "时区不能为空"
        SetTimeZoneErr
        CheckTimeZone = false
    End If
End Function

Function CheckLanguage()
	If IsValidLanguage Then 
        SetLanguageOK 
        CheckLanguage = true
    Else 
        TraceLog "语言不能为空"
        SetLanguageErr
        CheckLanguage = false
    End If
End Function

Function CheckMactoolUpdateNote()
	If IsValidMactoolUpdateNote Then 
        SetMactoolUpdateNoteOK 
        CheckMactoolUpdateNote = true
    Else 
        TraceLog "mac工具更新说明填写有误"
        SetMactoolUpdateNoteErr
        CheckMactoolUpdateNote = false
    End If
End Function

Function CheckUpdateReason()
	If IsValidUpdateReasonIndex Then 
        SetUpdateReasonOK 
        CheckUpdateReason = true
    Else 
        TraceLog "mac工具升级原因选择有误"
        SetUpdateReasonErr
        CheckUpdateReason = false
    End If
End Function

Function CheckMactoolUpdateReason()
	If IsValidMactoolUpdateReasonIndex Then 
        SetMactoolUpdateReasonOK 
        CheckMactoolUpdateReason = true
    Else 
        TraceLog "mac工具升级原因选择有误"
        SetMactoolUpdateReasonErr
        CheckMactoolUpdateReason = false
    End If
End Function

Function CheckRfFreq()
	If IsValidRfFreq Then 
        SetRfFreqOK 
        CheckRfFreq = true
    Else 
        TraceLog "RF频率填写有误"
        SetRfFreqErr
        CheckRfFreq = false
    End If
End Function

//////////////////////////////////
// Version Relations Function
Function SetPDMToolVersion(version)
    FormGlobal.LabelVersion.Caption = "版本: " + version
End Function

//////////////////////////////////
// Button Relations Function
Function EnableBtnOK()
    FormGlobal.BtnOK.Enabled = true
End Function

Function DisableBtnOK()
    FormGlobal.BtnOK.Enabled = false
End Function

Function EnableBtnReset()
    FormGlobal.BtnReset.Enabled = true
End Function

Function DisableBtnReset()
    FormGlobal.BtnReset.Enabled = false
End Function

Function EnableBtnSelectFile()
    FormGlobal.BtnSelectFile.Enabled = true
End Function

Function DisableBtnSelectFile()
    FormGlobal.BtnSelectFile.Enabled = false
End Function

Function EnableBtnSelectMacTool()
    FormGlobal.BtnSelectMacTool.Enabled = true
End Function

Function DisableBtnSelectMacTool()
    FormGlobal.BtnSelectMacTool.Enabled = false
End Function

//////////////////////////////////
// Device Relations Function
Function SetDeviceList(deviceList)
    FormGlobal.ComboxDevice.List = deviceList
End Function

Function GetDeviceIndex()
    GetDeviceIndex = FormGlobal.ComboxDevice.ListIndex
End Function

Function IsValidDeviceIndex()
    Dim deviceIndex
    deviceIndex = FormGlobal.ComboxDevice.ListIndex
    If 0 > deviceIndex Then
        IsValidDeviceIndex = false
    ElseIf DEIVCE_LIST_NUM <= deviceIndex Then
        IsValidDeviceIndex = false
    Else 
        IsValidDeviceIndex = true
    End If
End Function

Function GetDeviceName()
    Dim deviceList
    deviceList = Split(FormGlobal.ComboxDevice.List, "|")
    GetDeviceName = deviceList(FormGlobal.ComboxDevice.ListIndex)
End Function

Function SetDeviceOK()
    FormGlobal.ComboxDevice.NormalColor = "1BA154"
End Function

Function SetDeviceErr()
    FormGlobal.ComboxDevice.NormalColor = "0000FF"
End Function

Function SetDeviceNormal()
    FormGlobal.ComboxDevice.NormalColor = "A0A0A4"
End Function

Function ResetDevice()
    SetDeviceNormal 
	
    FormGlobal.ComboxDevice.ListIndex = DEVICE_ID_INVALID
End Function

//////////////////////////////////
// GroupBox Relations Function
Function SetGroupBoxInfo(deviceName)
    FormGlobal.GroupBoxInfo.Caption = "请填写" + deviceName + "机型相关信息"
End Function

Function ResetGroupBoxInfo()
    FormGlobal.GroupBoxInfo.Caption = "请先选择机型"
End Function

//////////////////////////////////
// SelectFile Relations Function
Function ResetSelecteFile()
    SetSelectedFileNormal 
	
    FormGlobal.LabelSelectedFile.Caption = TIPS_SELECT_FILE
    FormGlobal.LabelSelectedFile.Visible = false
    FormGlobal.BtnSelectFile.Visible = false	
End Function

Function ShowSelectFile()
    FormGlobal.LabelSelectedFile.Visible = true
    FormGlobal.BtnSelectFile.Visible = true
End Function

Function SetSelectedFile(filePath)
    FormGlobal.LabelSelectedFile.Caption = filePath
End Function

Function GetSelectedFile()
    GetSelectedFile = FormGlobal.LabelSelectedFile.Caption
End Function

Function IsValidSelectedFile()
    Dim filePath
    filePath = GetSelectedFile
    If filePath = TIPS_SELECT_FILE Then 
        IsValidSelectedFile = false
    ElseIf false = Plugin.File.IsFileExist(filePath) Then
        IsValidSelectedFile = false
    ElseIf false = IsValidDeviceIndex Then 
        IsValidSelectedFile = false	
    Else 
        // 增加正则匹配文件名是否合法
        Dim fileName, deviceNameL
        fileName = GetFileName(filePath)
        deviceNameL = LCase(GetDeviceName)

        Dim regEx, matches, matched
        Set regEx = New RegExp
        regEx.Pattern = "^" + deviceNameL + "-([0-9]{1,4}\.){3}[0-9]{1,4}-[0-9a-zA-Z]{1,}[_]{0,1}[0-9a-zA-Z]{0,}.img$"

        Set matches = regEx.Execute(fileName)
        If 1 <> matches.Count Then 
            IsValidSelectedFile = false
            Exit Function
        End If
		
        matched = matches(0)
        If matched = fileName Then 
            IsValidSelectedFile = true
        Else 
            IsValidSelectedFile = false	
        End If
    End If
End Function

Function SetSelectedFileOK()
    FormGlobal.LabelSelectedFile.TextColor = "1BA154"
End Function

Function SetSelectedFileErr()
    FormGlobal.LabelSelectedFile.TextColor = "0000FF"
End Function

Function SetSelectedFileNormal()
    FormGlobal.LabelSelectedFile.TextColor = "808080"
End Function

//////////////////////////////////
// SelectMacTools Relations Function
Function ResetSelecteMacTool()
    SetSelectedMacToolNormal
	
    FormGlobal.LabelSelectedMacTool.Caption = TIPS_SELECT_MACTOOL
    FormGlobal.LabelSelectedMacTool.Visible = false
    FormGlobal.BtnSelectMacTool.Visible = false	
End Function

Function ShowSelectMacTool()
    FormGlobal.LabelSelectedMacTool.Visible = true
    FormGlobal.BtnSelectMacTool.Visible = true
End Function

Function SetSelectedMacTool(filePath)
    FormGlobal.LabelSelectedMacTool.Caption = filePath
End Function

Function GetSelectedMacTool()
    GetSelectedMacTool = FormGlobal.LabelSelectedMacTool.Caption
End Function

Function IsValidSelectedMacTool()
    Dim macToolPath
    macToolPath = GetSelectedMacTool
    If macToolPath = TIPS_SELECT_MACTOOL Then 
        IsValidSelectedMacTool = false
    ElseIf false = Plugin.File.IsFileExist(macToolPath) Then
        IsValidSelectedMacTool = false
    ElseIf false = IsValidDeviceIndex Then 
        IsValidSelectedMacTool = false	
    Else 
        // 增加正则匹配文件名是否合法
        Dim fileName, deviceNameL
        fileName = GetFileName(macToolPath)
        deviceNameL = LCase(GetDeviceName)

        Dim regEx, matches, matched
        Set regEx = New RegExp
        regEx.Pattern = "^mac_tool_" + deviceNameL + "-([0-9]{1,4}\.){3}[0-9]{1,4}.zip$"

        Set matches = regEx.Execute(fileName)
        If 1 <> matches.Count Then 
            IsValidSelectedMacTool = false
            Exit Function
        End If
		
        matched = matches(0)
        If matched = fileName Then 
            IsValidSelectedMacTool = true
        Else 
            IsValidSelectedMacTool = false	
        End If
    End If
End Function

Function SetSelectedMacToolOK()
    FormGlobal.LabelSelectedMacTool.TextColor = "1BA154"
End Function

Function SetSelectedMacToolErr()
    FormGlobal.LabelSelectedMacTool.TextColor = "0000FF"
End Function

Function SetSelectedMacToolNormal()
    FormGlobal.LabelSelectedMacTool.TextColor = "808080"
End Function

//////////////////////////////////
// Input Relations Function
Function ResetProductName()
    SetProductNameNormal
	
    FormGlobal.LabelProductName.Caption = TIPS_INPUT_PRODUCT_NAME
    FormGlobal.LabelProductName.Visible = false
    FormGlobal.InputProductName.Text = ""	
    FormGlobal.InputProductName.Visible = false	
End Function

Function ShowProductName()
	SetProductNameNormal 
	
    FormGlobal.LabelProductName.Visible = true
    FormGlobal.InputProductName.Visible = true
End Function

Function GetProductName()
    GetProductName = FormGlobal.InputProductName.Text
End Function

Function GetProductNameTrim(productName)
	Dim regEx, matches, matched
    Set regEx = New RegExp
    
    // R48G
    regEx.Pattern = "V[PG]{0,2}-.*版"
    Set matches = regEx.Execute(productName)
    If 1 = matches.Count Then 
        GetProductNameTrim = matches(0)
        Exit Function
    End If
    
    // R47G
    regEx.Pattern = "R[0-9]{1,2}[PG]{1,2}.*版"
    Set matches = regEx.Execute(productName)
    If 1 = matches.Count Then 
        GetProductNameTrim = matches(0)
        Exit Function
    End If
    
    GetProductNameTrim = "Unknown"
End Function

Function IsValidProductName()
    Dim productName
    productName = GetProductName
    
    If "" = productName Then 
    	IsValidProductName = false
    	Exit Function
    End If
	
    IsValidProductName = true
End Function

Function SetProductNameOK()
    FormGlobal.LabelProductName.TextColor = "1BA154"
    FormGlobal.InputProductName.NormalColor = "1BA154"
End Function

Function SetProductNameErr()
    FormGlobal.LabelProductName.TextColor = "0000FF"
    FormGlobal.InputProductName.NormalColor = "0000FF"
End Function

Function SetProductNameNormal()
    FormGlobal.LabelProductName.TextColor = "808080"
    FormGlobal.InputProductName.NormalColor = "808080"
End Function

Function ResetBoardName()
    SetBoardNameNormal
	
    FormGlobal.LabelBoardName.Caption = TIPS_INPUT_BOARD_NAME
    FormGlobal.LabelBoardName.Visible = false
    FormGlobal.InputBoardName.Text = ""	
    FormGlobal.InputBoardName.Visible = false	
End Function

Function ShowBoardName()
	SetBoardNameNormal 
	
    FormGlobal.LabelBoardName.Visible = true
    FormGlobal.InputBoardName.Visible = true
End Function

Function GetBoardName()
    GetBoardName = FormGlobal.InputBoardName.Text
End Function

Function IsValidBoardName()
    Dim boardName
    boardName = GetBoardName
    
    If "" = boardName Then 
    	IsValidBoardName = false
    	Exit Function
    End If
	
    IsValidBoardName = true
End Function

Function SetBoardNameOK()
    FormGlobal.LabelBoardName.TextColor = "1BA154"
    FormGlobal.InputBoardName.NormalColor = "1BA154"
End Function

Function SetBoardNameErr()
    FormGlobal.LabelBoardName.TextColor = "0000FF"
    FormGlobal.InputBoardName.NormalColor = "0000FF"
End Function

Function SetBoardNameNormal()
    FormGlobal.LabelBoardName.TextColor = "808080"
    FormGlobal.InputBoardName.NormalColor = "808080"
End Function

Function ResetRfFreq()
    SetRfFreqNormal
	
    FormGlobal.LabelRfFreq.Caption = TIPS_INPUT_RF_FREQ
    FormGlobal.LabelRfFreq.Visible = false
    FormGlobal.InputRfFreq.Text = ""	
    FormGlobal.InputRfFreq.Visible = false	
End Function

Function ShowRfFreq()
    FormGlobal.LabelRfFreq.Visible = true
    FormGlobal.InputRfFreq.Visible = true
End Function

Function GetRfFreq()
    GetRfFreq = FormGlobal.InputRfFreq.Text
End Function

Function IsValidRfFreq()
    Dim freq
    freq = GetRfFreq
    
    Dim regEx, matches, matched
    Set regEx = New RegExp
    regEx.Pattern = "^[0-9]{0,}$"
    Set matches = regEx.Execute(freq)
    If 1 <> matches.Count Then 
        IsValidRfFreq = false
        Exit Function
    End If
	
    IsValidRfFreq = true
End Function

Function SetRfFreqOK()
    FormGlobal.LabelRfFreq.TextColor = "1BA154"
    FormGlobal.InputRfFreq.NormalColor = "1BA154"
End Function

Function SetRfFreqErr()
    FormGlobal.LabelRfFreq.TextColor = "0000FF"
    FormGlobal.InputRfFreq.NormalColor = "0000FF"
End Function

Function SetRfFreqNormal()
    FormGlobal.LabelRfFreq.TextColor = "808080"
    FormGlobal.InputRfFreq.NormalColor = "808080"
End Function

Function ResetHwVersion()
    SetHwVersionNormal
	
    FormGlobal.LabelHwVersion.Caption = TIPS_INPUT_HW_VERSION
    FormGlobal.LabelHwVersion.Visible = false
    FormGlobal.InputHwVersion.Text = ""	
    FormGlobal.InputHwVersion.Visible = false	
End Function

Function ShowHwVersion()
	SetHwVersionNormal 
	
    FormGlobal.LabelHwVersion.Visible = true
    FormGlobal.InputHwVersion.Visible = true
End Function

Function GetHwVersion()
    GetHwVersion = FormGlobal.InputHwVersion.Text
End Function

Function IsValidHwVersion()
    Dim hwVersion
    hwVersion = GetHwVersion
    
    If "" = hwVersion Then 
    	IsValidHwVersion = false
    	Exit Function
    End If
	
    IsValidHwVersion = true
End Function

Function SetHwVersionOK()
    FormGlobal.LabelHwVersion.TextColor = "1BA154"
    FormGlobal.InputHwVersion.NormalColor = "1BA154"
End Function

Function SetHwVersionErr()
    FormGlobal.LabelHwVersion.TextColor = "0000FF"
    FormGlobal.InputHwVersion.NormalColor = "0000FF"
End Function

Function SetHwVersionNormal()
    FormGlobal.LabelHwVersion.TextColor = "808080"
    FormGlobal.InputHwVersion.NormalColor = "808080"
End Function

Function ResetHwModel()
    SetHwModelNormal
	
    FormGlobal.LabelHwModel.Caption = TIPS_INPUT_HW_MODEL
    FormGlobal.LabelHwModel.Visible = false
    FormGlobal.InputHwModel.Text = ""	
    FormGlobal.InputHwModel.Visible = false	
End Function

Function ShowHwModel()
	SetHwModelNormal 
	
    FormGlobal.LabelHwModel.Visible = true
    FormGlobal.InputHwModel.Visible = true
End Function

Function GetHwModel()
    GetHwVersion = FormGlobal.InputHwModel.Text
End Function

Function IsValidHwModel()
    Dim hwModel
    hwModel = GetHwModel
    
    If "" = hwModel Then 
    	IsValidHwModel = false
    	Exit Function
    End If
	
    IsValidHwModel = true
End Function

Function SetHwModelOK()
    FormGlobal.LabelHwModel.TextColor = "1BA154"
    FormGlobal.InputHwModel.NormalColor = "1BA154"
End Function

Function SetHwModelErr()
    FormGlobal.LabelHwModel.TextColor = "0000FF"
    FormGlobal.InputHwModel.NormalColor = "0000FF"
End Function

Function SetHwModelNormal()
    FormGlobal.LabelHwModel.TextColor = "808080"
    FormGlobal.InputHwModel.NormalColor = "808080"
End Function

Function ResetUpdateNote()
    SetUpdateNoteNormal
	
    FormGlobal.LabelUpdateNote.Caption = TIPS_INPUT_UPDATE_NOTE
    FormGlobal.LabelUpdateNote.Visible = false
    FormGlobal.InputUpdateNote.Text = ""	
    FormGlobal.InputUpdateNote.Visible = false	
End Function

Function ShowUpdateNote()
	SetUpdateNoteNormal 
	
    FormGlobal.LabelUpdateNote.Visible = true
    FormGlobal.InputUpdateNote.Visible = true
End Function

Function GetUpdateNote()
    GetUpdateNote = FormGlobal.InputUpdateNote.Text
End Function

Function IsValidUpdateNote()
    IsValidUpdateNote = true
End Function

Function SetUpdateNoteOK()
    FormGlobal.LabelUpdateNote.TextColor = "1BA154"
    FormGlobal.InputUpdateNote.NormalColor = "1BA154"
End Function

Function SetUpdateNoteErr()
    FormGlobal.LabelUpdateNote.TextColor = "0000FF"
    FormGlobal.InputUpdateNote.NormalColor = "0000FF"
End Function

Function SetUpdateNoteNormal()
    FormGlobal.LabelUpdateNote.TextColor = "808080"
    FormGlobal.InputUpdateNote.NormalColor = "808080"
End Function

Function ResetMactoolUpdateNote()
    SetMactoolUpdateNoteNormal
	
    FormGlobal.LabelMactoolUpdateNote.Caption = TIPS_INPUT_MACTOOL_UPDATE_NOTE
    FormGlobal.LabelMactoolUpdateNote.Visible = false
    FormGlobal.InputMactoolUpdateNote.Text = ""	
    FormGlobal.InputMactoolUpdateNote.Visible = false	
End Function

Function ShowMactoolUpdateNote()
	SetMactoolUpdateNoteNormal 
	
    FormGlobal.LabelMactoolUpdateNote.Visible = true
    FormGlobal.InputMactoolUpdateNote.Visible = true
End Function

Function GetMactoolUpdateNote()
    GetMactoolUpdateNote = FormGlobal.InputMactoolUpdateNote.Text
End Function

Function IsValidMactoolUpdateNote()
    IsValidMactoolUpdateNote = true
End Function

Function SetMactoolUpdateNoteOK()
    FormGlobal.LabelMactoolUpdateNote.TextColor = "1BA154"
    FormGlobal.InputMactoolUpdateNote.NormalColor = "1BA154"
End Function

Function SetMactoolUpdateNoteErr()
    FormGlobal.LabelMactoolUpdateNote.TextColor = "0000FF"
    FormGlobal.InputMactoolUpdateNote.NormalColor = "0000FF"
End Function

Function SetMactoolUpdateNoteNormal()
    FormGlobal.LabelMactoolUpdateNote.TextColor = "808080"
    FormGlobal.InputMactoolUpdateNote.NormalColor = "808080"
End Function

Function ResetTimeZone()
    SetTimeZoneNormal
	
    FormGlobal.LabelTimeZone.Caption = TIPS_INPUT_TIME_ZONE
    FormGlobal.LabelTimeZone.Visible = false
    FormGlobal.InputTimeZone.Text = ""	
    FormGlobal.InputTimeZone.Visible = false	
End Function

Function ShowTimeZone()
	SetTimeZoneNormal 
	
    FormGlobal.LabelTimeZone.Visible = true
    FormGlobal.InputTimeZone.Visible = true
End Function

Function GetTimeZone()
    GetTimeZone = FormGlobal.InputTimeZone.Text
End Function

Function IsValidTimeZone()
	Dim timezone
    timezone = GetTimeZone()
    
    If "" = timezone Then 
    	IsValidTimeZone = false
    	Exit Function
    End If
	
    IsValidTimeZone = true
End Function

Function SetTimeZoneOK()
    FormGlobal.LabelTimeZone.TextColor = "1BA154"
    FormGlobal.InputTimeZone.NormalColor = "1BA154"
End Function

Function SetTimeZoneErr()
    FormGlobal.LabelTimeZone.TextColor = "0000FF"
    FormGlobal.InputTimeZone.NormalColor = "0000FF"
End Function

Function SetTimeZoneNormal()
    FormGlobal.LabelTimeZone.TextColor = "808080"
    FormGlobal.InputTimeZone.NormalColor = "808080"
End Function

Function ResetLanguage()
    SetLanguageNormal
	
    FormGlobal.LabelLanguage.Caption = TIPS_INPUT_LANGUAGE
    FormGlobal.LabelLanguage.Visible = false
    FormGlobal.InputLanguage.Text = ""	
    FormGlobal.InputLanguage.Visible = false	
End Function

Function ShowLanguage()
	SetLanguageNormal 
	
    FormGlobal.LabelLanguage.Visible = true
    FormGlobal.InputLanguage.Visible = true
End Function

Function GetLanguage()
    GetLanguage = FormGlobal.InputLanguage.Text
End Function

Function IsValidLanguage()
	Dim language
    language = GetLanguage()
    
    If "" = language Then 
    	IsValidLanguage = false
    	Exit Function
    End If
	
    IsValidLanguage = true
End Function

Function SetLanguageOK()
    FormGlobal.LabelLanguage.TextColor = "1BA154"
    FormGlobal.InputLanguage.NormalColor = "1BA154"
End Function

Function SetLanguageErr()
    FormGlobal.LabelLanguage.TextColor = "0000FF"
    FormGlobal.InputLanguage.NormalColor = "0000FF"
End Function

Function SetLanguageNormal()
    FormGlobal.LabelLanguage.TextColor = "808080"
    FormGlobal.InputLanguage.NormalColor = "808080"
End Function

Function ResetUpdateReason()
    SetUpdateReasonNormal
	
    FormGlobal.LabelUpdateReason.Caption = TIPS_INPUT_UPDATE_REASON
    FormGlobal.LabelUpdateReason.Visible = false
    FormGlobal.ComboxUpdateReason.List = UPDATE_REASON_ID_LIST
	FormGlobal.ComboxUpdateReason.ListIndex = UPDATE_REASON_ID_INVALID
    FormGlobal.ComboxUpdateReason.Visible = false	
End Function

Function ShowUpdateReason()
	SetUpdateReasonNormal 
	
    FormGlobal.LabelUpdateReason.Visible = true
    FormGlobal.ComboxUpdateReason.Visible = true
End Function

Function GetUpdateReasonIndex()
    GetUpdateReasonIndex = FormGlobal.ComboxUpdateReason.ListIndex
End Function

Function IsValidUpdateReasonIndex()
    Dim reasonIndex
    reasonIndex = FormGlobal.ComboxUpdateReason.ListIndex
    If 0 > reasonIndex Then
        IsValidUpdateReasonIndex = false
    ElseIf UPDATE_REASON_LIST_NUM <= reasonIndex Then
        IsValidUpdateReasonIndex = false
    Else 
        IsValidUpdateReasonIndex = true
    End If
End Function

Function GetUpdateReason()
    Dim reasonList
    reasonList = Split(FormGlobal.ComboxUpdateReason.List, "|")
    GetUpdateReason = reasonList(FormGlobal.ComboxUpdateReason.ListIndex)
End Function

Function SetUpdateReasonOK()
    FormGlobal.LabelUpdateReason.TextColor = "1BA154"
    FormGlobal.ComboxUpdateReason.NormalColor = "1BA154"
End Function

Function SetUpdateReasonErr()
    FormGlobal.LabelUpdateReason.TextColor = "0000FF"
    FormGlobal.ComboxUpdateReason.NormalColor = "0000FF"
End Function

Function SetUpdateReasonNormal()
    FormGlobal.LabelUpdateReason.TextColor = "808080"
    FormGlobal.ComboxUpdateReason.NormalColor = "808080"
End Function

Function ResetMactoolUpdateReason()
    SetMactoolUpdateReasonNormal
	
    FormGlobal.LabelMactoolUpdateReason.Caption = TIPS_INPUT_MACTOOL_UPDATE_REASON
    FormGlobal.LabelMactoolUpdateReason.Visible = false
    FormGlobal.ComboxMactoolUpdateReason.List = MACTOOL_UPDATE_REASON_ID_LIST
	FormGlobal.ComboxMactoolUpdateReason.ListIndex = MACTOOL_UPDATE_REASON_ID_INVALID
    FormGlobal.ComboxMactoolUpdateReason.Visible = false	
End Function

Function ShowMactoolUpdateReason()
	SetMactoolUpdateReasonNormal 
	
    FormGlobal.LabelMactoolUpdateReason.Visible = true
    FormGlobal.ComboxMactoolUpdateReason.Visible = true
End Function

Function GetMactoolUpdateReasonIndex()
    GetMactoolUpdateReasonIndex = FormGlobal.ComboxMactoolUpdateReason.ListIndex
End Function

Function IsValidMactoolUpdateReasonIndex()
    Dim reasonIndex
    reasonIndex = FormGlobal.ComboxMactoolUpdateReason.ListIndex
    If 0 > reasonIndex Then
        IsValidMactoolUpdateReasonIndex = false
    ElseIf MACTOOL_UPDATE_REASON_LIST_NUM <= reasonIndex Then
        IsValidMactoolUpdateReasonIndex = false
    Else 
        IsValidMactoolUpdateReasonIndex = true
    End If
End Function

Function GetMactoolUpdateReason()
    Dim reasonList
    reasonList = Split(FormGlobal.ComboxMactoolUpdateReason.List, "|")
    GetMactoolUpdateReason = reasonList(FormGlobal.ComboxMactoolUpdateReason.ListIndex)
End Function

Function SetMactoolUpdateReasonOK()
    FormGlobal.LabelMactoolUpdateReason.TextColor = "1BA154"
    FormGlobal.ComboxMactoolUpdateReason.NormalColor = "1BA154"
End Function

Function SetMactoolUpdateReasonErr()
    FormGlobal.LabelMactoolUpdateReason.TextColor = "0000FF"
    FormGlobal.ComboxMactoolUpdateReason.NormalColor = "0000FF"
End Function

Function SetMactoolUpdateReasonNormal()
    FormGlobal.LabelMactoolUpdateReason.TextColor = "808080"
    FormGlobal.ComboxMactoolUpdateReason.NormalColor = "808080"
End Function

//////////////////////////////////
// Word Relations Function
Function BuildKeyWordsMap(userName, model, oem, version, hwVersion, hwModel, mactoolVersion, productName, productNameTrim, boardName, _
    	fileName, fileTime, fileMD5, fileSizeReadableMB, fileSizeReadableByte, _
    	mactoolName, mactoolTime, mactoolMD5, mactoolSizeReadableMB, mactoolSizeReadableByte)
	
	gKeywordsMapSize = 0
	
	// Common
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${userName}"
    map(1, gKeywordsMapSize) = userName
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${modelL}"
    map(1, gKeywordsMapSize) = LCase(model)
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${modelU}"
    map(1, gKeywordsMapSize) = UCase(model)
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${oemL}"
    map(1, gKeywordsMapSize) = LCase(oem)
	gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${oemU}"
    map(1, gKeywordsMapSize) = UCase(oem)
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${version}"
    map(1, gKeywordsMapSize) = version
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${hwVersion}"
    map(1, gKeywordsMapSize) = hwVersion
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${hwModel}"
    map(1, gKeywordsMapSize) = hwModel
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${mactoolVersion}"
    map(1, gKeywordsMapSize) = mactoolVersion
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${productName}"
    map(1, gKeywordsMapSize) = productName
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${productNameTrim}"
    map(1, gKeywordsMapSize) = productNameTrim
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${boardName}"
    map(1, gKeywordsMapSize) = boardName
    gKeywordsMapSize = gKeywordsMapSize + 1
    
    // img
    ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${fileName}"
    map(1, gKeywordsMapSize) = fileName
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${fileTime}"
    map(1, gKeywordsMapSize) = fileTime
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${fileMD5}"
    map(1, gKeywordsMapSize) = fileMD5
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${fileSizeReadableMB}"
    map(1, gKeywordsMapSize) = fileSizeReadableMB
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${fileSizeReadableByte}"
    map(1, gKeywordsMapSize) = fileSizeReadableByte
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	// mactool
	ReDim Preserve map(2, gKeywordsMapSize + 1)
	map(0, gKeywordsMapSize) = "${mactoolName}"
    map(1, gKeywordsMapSize) = mactoolName
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${mactoolTime}"
    map(1, gKeywordsMapSize) = mactoolTime
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${mactoolMD5}"
    map(1, gKeywordsMapSize) = mactoolMD5
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${mactoolSizeReadableMB}"
    map(1, gKeywordsMapSize) = mactoolSizeReadableMB
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${mactoolSizeReadableByte}"
    map(1, gKeywordsMapSize) = mactoolSizeReadableByte
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	// 非关键信息, 直接从这里读取
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${updateNote}"
    map(1, gKeywordsMapSize) = GetUpdateNote()
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${updateReason}"
    map(1, gKeywordsMapSize) = GetUpdateReason()
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${timezone}"
    map(1, gKeywordsMapSize) = GetTimeZone()
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${language}"
    map(1, gKeywordsMapSize) = GetLanguage()
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${mactoolUpdateNote}"
    map(1, gKeywordsMapSize) = GetMactoolUpdateNote()
    gKeywordsMapSize = gKeywordsMapSize + 1
	
	ReDim Preserve map(2, gKeywordsMapSize + 1)
    map(0, gKeywordsMapSize) = "${mactoolUpdateReason}"
    map(1, gKeywordsMapSize) = GetMactoolUpdateReason()
    gKeywordsMapSize = gKeywordsMapSize + 1
	
    BuildKeyWordsMap = map
End Function

Function BuildKeyWordsMapByDevice()
	Dim deviceID
    deviceID = GetDeviceIndex
    
    Select Case deviceID
    Case DEVICE_ID_R47G
    	
    Case DEVICE_ID_R48G
    	gKeywordsMapSizeByDevice = 2 
        Redim mapByDevice(2, gKeywordsMapSizeByDevice)
                
        mapByDevice(0, 0) = "${rfFreq}"
        mapByDevice(1, 0) = GetRfFreq()
        
        mapByDevice(0, 1) = "${rfFreqWithSymbol}"
        If "" = mapByDevice(1, 0) Then 
        	mapByDevice(1, 1) = ""
        Else
        	mapByDevice(1, 1) = "-rf" + mapByDevice(1, 0)
        End If
        
    Case DEVICE_ID_R49P
			
    Case Else

    End Select
    
    BuildKeyWordsMapByDevice = mapByDevice
End Function

Function DoGenerateWordDoc(curPath, keyWordsMap, keyWordsMapByDevice)
    Const DEVICE_WORD_TEMPLATE_PATH = "\templates"
    Const DEVICE_WORD_OUTPUT_PATH = "\outputs"
    Const DEVICE_R47G_WORD_TEMPLATE_LIST = "工程文件发行.doc|Mac烧写工具.doc"
    Const DEVICE_R48G_WORD_TEMPLATE_LIST = "工程文件发行.doc|Mac烧写工具.doc"
	
    Dim deviceID, fileList, filePath, outputPath
    deviceID = GetDeviceIndex()
    Select Case deviceID
    Case DEVICE_ID_R47G
    	filePath = curPath + DEVICE_WORD_TEMPLATE_PATH + "\R47G\"
        fileList = Split(DEVICE_R47G_WORD_TEMPLATE_LIST, "|")
        outputPath = curPath + DEVICE_WORD_OUTPUT_PATH + "\R47G\"
        
    Case DEVICE_ID_R48G
        filePath = curPath + DEVICE_WORD_TEMPLATE_PATH + "\R48G\"
        fileList = Split(DEVICE_R48G_WORD_TEMPLATE_LIST, "|")
        outputPath = curPath + DEVICE_WORD_OUTPUT_PATH + "\R48G\"

    Case DEVICE_ID_R49P
        // Unsupport now
        DoGenerateWordDoc = false
        Exit Function
			
    Case Else
        DoGenerateWordDoc = false
        Exit Function
    End Select

    Dim wordApp, wordDocument, wordFinder, wordRange
    For i = 0 To UBound(fileList)
        // 合法性检查
        If false = Plugin.File.IsFileExist(filePath + fileList(i)) Then 
            TraceLog "模板文件[" + filePath + fileList(i) + "]不存在!"
            DoGenerateWordDoc = false
            Exit Function
        End If
		
        // 复制文件
        Plugin.File.CopyFile filePath + fileList(i), outputPath + fileList(i)
		
        // 替换关键字
        Set wordApp = CreateObject("Word.Application")
        Set wordDocument = wordApp.Documents.Open(outputPath + fileList(i))
		For Each wordRange In wordApp.ActiveDocument.StoryRanges
			Set finderObj = wordRange.Find
			For j = 0 To (gKeywordsMapSize - 1)
				finderObj.Execute keyWordsMap(0, j),"","","","","","","","", keyWordsMap(1, j), 2
			Next
			For j = 0 To (gKeywordsMapSizeByDevice - 1)
				finderObj.Execute keyWordsMapByDevice(0, j),"","","","","","","","", keyWordsMapByDevice(1, j), 2
			Next
        Next

		wordDocument.Save 
        wordApp.Quit
    Next
    DoGenerateWordDoc = true
End Function

Function DoGenerateExcelXls(curPath, keyWordsMap, keyWordsMapByDevice)
	Const DEVICE_EXCEL_TEMPLATE_PATH = "\templates"
    Const DEVICE_EXCEL_OUTPUT_PATH = "\outputs"
    Const DEVICE_R47G_EXCEL_TEMPLATE_LIST = "工程文件发行说明文件导入模板.xls|版本评估会会议决议模版.xls|Mac烧写工具软件说明文件导入模板.xls"
    Const DEVICE_R48G_EXCEL_TEMPLATE_LIST = "工程文件发行说明文件导入模板.xls|版本评估会会议决议模版.xls|Mac烧写工具软件说明文件导入模板.xls"
	
    Dim deviceID, fileList, filePath, outputPath
    deviceID = GetDeviceIndex()
    Select Case deviceID
    Case DEVICE_ID_R47G
        filePath = curPath + DEVICE_EXCEL_TEMPLATE_PATH + "\R47G\"
        fileList = Split(DEVICE_R47G_EXCEL_TEMPLATE_LIST, "|")
        outputPath = curPath + DEVICE_EXCEL_OUTPUT_PATH + "\R47G\"
        
    Case DEVICE_ID_R48G
        filePath = curPath + DEVICE_EXCEL_TEMPLATE_PATH + "\R48G\"
        fileList = Split(DEVICE_R48G_EXCEL_TEMPLATE_LIST, "|")
        outputPath = curPath + DEVICE_EXCEL_OUTPUT_PATH + "\R48G\"

    Case DEVICE_ID_R49P
        // Unsupport now
        DoGenerateExcelXls = false
        Exit Function
			
    Case Else
        DoGenerateExcelXls = false
        Exit Function
    End Select

	//Dim excelApp, sheets
	Dim excelApp, excelDocument, excelRange, finderObj
	For i = 0 To UBound(fileList)
		// 合法性检查
        If false = Plugin.File.IsFileExist(filePath + fileList(i)) Then 
            TraceLog "模板文件[" + filePath + fileList(i) + "]不存在!"
            DoGenerateExcelXls = false
            Exit Function
        End If
        
		// 复制文件
        Plugin.File.CopyFile filePath + fileList(i), outputPath + fileList(i)
        
        // 替换关键字
        // 替换关键字
        excelApp = Plugin.LazyOffice.ExcelOpen(outputPath + fileList(i), 0)
        sheets = Plugin.LazyOffice.SheetCount(excelApp)
		For sheet = 1 To sheets
			For j = 0 To (gKeywordsMapSize - 1)
				Plugin.LazyOffice.ExcelReplace sheet, keyWordsMap(0, j), keyWordsMap(1, j), "", false, false, excelApp
			Next
			For j = 0 To (gKeywordsMapSizeByDevice - 1)
				Plugin.LazyOffice.ExcelReplace sheet, keyWordsMapByDevice(0, j), keyWordsMapByDevice(1, j), "", false, false, excelApp
			Next
		Next
		
		Plugin.LazyOffice.ExcelSave (excelApp)	
		Plugin.LazyOffice.ExcelClose (excelApp)
 	Next

    DoGenerateExcelXls = true
End Function

//////////////////////////////////
// Common Function
Function ClearLog()
    FormGlobal.InputLog.text = ""
End Function

Function TraceLog(logContent)
    Dim logline
    logline = "日志" + "[" + CStr(Hour(now)) + ":" + CStr(Minute(now)) + ":" + CStr(Second(now)) + "]"
    logline = logline + ": " + CStr(logContent)

    FormGlobal.InputLog.text = FormGlobal.InputLog.text + vbcrlf + logline
End Function

Function Round(value, keep)
    If 0 <> InStr(value, ".") Then
        Dim integerPart, decimalPart
        integerPart = split(value, ".")(0)
        decimalPart = split(value, ".")(1)
        If Len(decimalPart) < keep Then 
            Round = integerPart & "." & String(keep - Len(decimalPart), "0")
        ElseIf Len(decimalPart) = keep Then   
            Round = value
        ElseIf Len(decimalPart) > keep Then
            Dim tmpLen, tmpValue
            If Mid(decimalPart, keep + 1, 1) >= 5 Then 
                If Len(decimalPart) = 1 Then 
                    Round = integerPart + 1
                Else 
                    tmpLen = Len(Left(decimalPart, keep))
                    tmpValue = Left(decimalPart, keep) + 1
                    If (Len(tmpValue) <> tmpLen) Then 
                        tmpValue = String(tmpLen - Len(tmpValue), "0") & tmpValue
                    End If
                    Round = integerPart & "." & tmpValue
                End If
            Else 
                If Len(decimalPart) = 1 Then 
                    Round = integerPart
                Else 
                    tmpLen = Len(Left(decimalPart, keep))
                    tmpValue = Left(decimalPart, keep) + 1
                    If (Len(tmpValue) <> tmpValue) Then 
                        tmpValue = String(tmpLen - Len(tmpValue), "0") & tmpValue
                    End If
                    Round = integerPart & "." & tmpValue
                End If
            End If
        End If
    Else 
        Round = value & "." & String(keep, "0")
    End If
End Function

Function TrimBytes(value)
    Dim comma, num, lenth
    Dim leftPart, rightPart
    lenth = Len(value)
	
    If lenth > 3 Then 
        For i = 3 To lenth step 3	
            leftPart = Left(value, lenth - i + ((i-3)/3))
            rightPart = right(value, i + ((i-3)/3))
            value = leftPart & "," & rightPart
        Next	
    End If
	
    TrimBytes = CStr(value)
End Function

Function GetFileName(filePath)
    Dim fso
    Set fso = CreateObject("Scripting.FileSystemObject")
    GetFileName = fso.GetFileName(filePath)
End Function

Function GetFileTime(filePath)
    Dim fso
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set fileObj = fso.GetFile(filePath)
    GetFileTime = CStr(fileObj.DateCreated)
End Function

Function GetModel(fileName)
    Dim regEx, matches
    Set regEx = New RegExp
    regEx.Pattern = "^r[4][789][gp]{0,1}"
    Set matches = regEx.Execute(fileName)
    If 1 <> matches.Count Then 
        GetModel = "Unknown"
        Exit Function
    End If
    GetModel = matches(0)
End Function

Function GetVersion(fileName)
    Dim regEx, matches
    Set regEx = New RegExp
    regEx.Pattern = "([0-9]{1,4}\.){3}[0-9]{1,4}"
    Set matches = regEx.Execute(fileName)
    If 1 <> matches.Count Then 
        GetVersion = "Unknown"
        Exit Function
    End If
    GetVersion = matches(0)
End Function

Function GetOem(fileName)
    Dim regEx, matches
    Set regEx = New RegExp
    regEx.Pattern = "-[0-9a-zA-Z]{1,}[_]{0,1}[0-9a-zA-Z]{0,}.img"
    Set matches = regEx.Execute(fileName)
    If 1 <> matches.Count Then 
        GetOem = "Unknown"
        Exit Function
    End If
	
    regEx.Pattern = "[0-9a-zA-Z]{1,}[_]{0,1}[0-9a-zA-Z]{0,}"
    Set matches = regEx.Execute(matches(0))
    If 1 <> matches.Count Then 
        GetOem = "Unknown"
        Exit Function
    End If
	
    GetOem = matches(0)
End Function

Function ResetAll()
    ResetDevice 
    ResetAllWithoutDevice
End Function

Function ResetAllWithoutDevice()
    ResetGroupBoxInfo 
    ResetSelecteFile 
    ResetSelecteMacTool 
    ResetProductName 
    ResetBoardName 
    ResetHwVersion 
    ResetHwModel
    ResetUpdateNote 
    ResetMactoolUpdateNote
    ResetTimeZone 
    ResetLanguage 
    ResetUpdateReason
    ResetMactoolUpdateReason
    ResetRfFreq
End Function

Function DiableAll()
	DisableBtnOK 
    DisableBtnReset 
    DisableBtnSelectFile 
    DisableBtnSelectMacTool
End Function

Function EnableAll()
	EnableBtnSelectMacTool
    EnableBtnSelectFile
    EnableBtnReset 
    EnableBtnOK 
End Function

Function Generate()
    If true = gRunFlag Then 
        TraceLog "正在生成中..."
    Else 
    	
        gRunFlag = true
        BeginThread DoGenerate
    End If
End Function

//////////////////////////////////
// Common Sub, for Thread
Sub DoGenerate()
    DiableAll
		
    Dim filePath, fileName, fileTime, fileMD5, fileSize, fileSizeReadableByte, fileSizeReadableMB
    filePath = GetSelectedFile()
    fileName = GetFileName(filePath)
    fileTime = GetFileTime(filePath)
    fileMD5 = Plugin.Encrypt.Md5File(filePath)
    fileSize = Plugin.File.GetFileLength(filePath)

    fileSizeReadableByte = TrimBytes(fileSize) + " 字节"
    fileSizeReadableMB = Round(fileSize/1024/1024, 1) + " MB"

	Dim userName
	userName = InputBox("请输入生成者的名字")

	Dim mactoolPath, mactoolName, mactoolTime, mactoolMD5, mactoolSize, mactoolSizeReadableByte, mactoolSizeReadableMB
	mactoolPath = GetSelectedMacTool()
	mactoolName = GetFileName(mactoolPath)
	mactoolTime = GetFileTime(mactoolPath)
	mactoolMD5 = Plugin.Encrypt.Md5File(mactoolPath)
    mactoolSize = Plugin.File.GetFileLength(mactoolPath)
    mactoolSizeReadableByte = TrimBytes(mactoolSize) + " 字节"
    mactoolSizeReadableMB = Round(mactoolSize/1024/1024, 1) + " MB"

    Dim model, oem, version, hwVersion, hwModel, mactoolVersion, productName, productNameTrim, boardName
    model = GetModel(fileName)
    oem = GetOem(fileName)
    version = GetVersion(fileName)
    hwVersion = GetHwVersion()
    hwModel = GetHwModel()
    mactoolVersion = GetVersion(mactoolName)
    productName = GetProductName()
    productNameTrim = GetProductNameTrim(productName)
    boardName = GetBoardName()
    
    // 信息输出
    TraceLog "-----------关键信息-------------"
    TraceLog "机型 - " + model
    TraceLog "版本 - " + version
    TraceLog "硬件版本 - " + hwVersion
    TraceLog "硬件型号 - " + hwModel
    TraceLog "mac工具版本 - " + mactoolVersion
    TraceLog "OEM - " + oem
    TraceLog "产品型号 - " + productName
    TraceLog "主板型号 - " + boardName
    TraceLog "------"
    TraceLog "img文件名称 - " + fileName
    TraceLog "img文件创建时间 - " + fileTime
    TraceLog "img文件MD5 - " + fileMD5
    TraceLog "img文件大小 - " + fileSizeReadableMB + "(" + fileSizeReadableByte + ")"
 	TraceLog "------"
 	TraceLog "mactool名称 - " + mactoolName
    TraceLog "mactool创建时间 - " + mactoolTime
    TraceLog "mactoolMD5 - " + mactoolMD5
    TraceLog "mactool大小 - " + mactoolSizeReadableMB + "(" + mactoolSizeReadableByte + ")" 
	TraceLog "------"
	
	
    Dim generateRes, keyWordsMap, keyWordsMapByDevice
    keyWordsMap = BuildKeyWordsMap(userName, model, oem, version, hwVersion, hwModel, mactoolVersion, productName, productNameTrim, boardName, _
    	fileName, fileTime, fileMD5, fileSizeReadableMB, fileSizeReadableByte, _
    	mactoolName, mactoolTime, mactoolMD5, mactoolSizeReadableMB, mactoolSizeReadableByte)
    	
    keyWordsMapByDevice = BuildKeyWordsMapByDevice()
	
    // 根据模板生成Word文档
    generateRes = DoGenerateWordDoc(gRunPath, keyWordsMap, keyWordsMapByDevice)
    If false = generateRes Then 
        TraceLog "生成Word文件失败, 请检查模板文件及日志信息!"
        EnableAll
        Exit Sub
    End If
	
    // 根据模板生成Excel文档
    generateRes = DoGenerateExcelXls(gRunPath, keyWordsMap, keyWordsMapByDevice)
    If false = generateRes Then 
        TraceLog "生成Excel文件失败, 请检查模板文件及日志信息!"
        EnableAll
        Exit Sub
    End If
    
    // 结束
    TraceLog "生成结束, 请审核outputs文件夹中内容!"
	
	EnableAll
    gRunFlag = false
End Sub

