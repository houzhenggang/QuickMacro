[General]
SyntaxVersion=2
BeginHotkey=121
BeginHotkeyMod=0
PauseHotkey=0
PauseHotkeyMod=0
StopHotkey=123
StopHotkeyMod=0
RunOnce=1
EnableWindow=
MacroID=14cc468c-f0f5-4e9a-8c08-779bebf0b69d
Description=PDMTool
Enable=1
AutoRun=0
[Repeat]
Type=0
Number=1
[SetupUI]
Type=1
QUI=FormGlobal
[Relative]
SetupOCXFile=
[Comment]

[UIPackage]
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


[Script]
//////////////////////////////////
// Global Flag
Global gRunFlag
gRunFlag = false

//////////////////////////////////
// Init Event
Event FormGlobal.Load
    Const PDMTOOL_VERSION = "1.0.1"
    Const DEIVCE_LIST_NUM = 2
    Const DEVICE_ID_INVALID = -1
    Const DEVICE_ID_R48G = 0
    Const DEVICE_ID_R49P = 1
    Const DEVICE_ID_LIST = "R48G"
    Const TIPS_SELECT_FILE = "请选择要上PDM的img文件"
    Const TIPS_SELECT_MACTOOL = "请选择要上PDM的mac工具"
    Const TIPS_INPUT_PRODUCT_NAME = "请输入整机料号"
    Const TIPS_INPUT_BOARD_NAME = "请输入主板料号"
    Const TIPS_INPUT_RF_FREQ = "请输入RF频率"
	
    SetPDMToolVersion(PDMTOOL_VERSION)
    SetDeviceList(DEVICE_ID_LIST)
    ResetAll
End Event

//////////////////////////////////
// Click Event
Event FormGlobal.BtnClearLog.Click
    ClearLog
End Event

Event FormGlobal.BtnOK.Click
    Dim checkRes
    checkRes = true
    checkRes = CheckDevice and checkRes
    checkRes = CheckSelectedFile and checkRes
    checkRes = CheckSelectedMacTool and checkRes
	
	// 机型相关的检查
	
	
    If false = checkRes Then
        TraceLog "检测失败, 请正确填写PDM所需信息"
    Else 
        TraceLog "生成中, 请稍后..."
        Generate
    End If
	
End Event

Event FormGlobal.BtnReset.Click
    ResetAll
End Event

Event FormGlobal.BtnSelectFile.Click
    Dim filePath
    filePath = Plugin.File.SelectFile()
    If filePath <> "" Then 
        SetSelectedFileNormal
        SetSelectedFile(filePath)
    End If
End Event

Event FormGlobal.BtnSelectMacTool.Click
    Dim filePath
    filePath = Plugin.File.SelectFile()
    If filePath <> "" Then 
        SetSelectedMacToolNormal
        SetSelectedMacTool(filePath)
    End If
End Event

//////////////////////////////////
// Select Event
Event FormGlobal.ComboxDevice.SelectChange
    SetDeviceNormal 
    ResetAllWithoutDevice 
    
    If IsValidDeviceIndex Then 
    	SetGroupBoxInfo (GetDeviceName)
        ShowSelectFile
        ShowSelectMacTool 
        ShowProductName 
        ShowBoardName
		
        // 根据机型, 加载对应布局
        Dim deviceID
        deviceID = GetDeviceIndex
        
        Select Case deviceID
    	Case DEVICE_ID_R48G
        	ShowRfFreq
	
    	Case DEVICE_ID_R49P
				
    	Case Else
        	
    	End Select
    End If
End Event


//////////////////////////////////
// Check Function
Function CheckDevice()
    If IsValidDeviceIndex Then
        SetDeviceOK 
        CheckDevice = true
    Else 
        TraceLog "机型信息非法"
        SetDeviceErr 
        CheckDevice = false
    End If
End Function

Function CheckSelectedFile()
    If IsValidSelectedFile Then 
        SetSelectedFileOK 
        CheckSelectedFile = true
    Else 
        TraceLog "请选择正确的img文件"
        SetSelectedFileErr 
        CheckSelectedFile = false
    End If
End Function

Function CheckSelectedMacTool()
    If IsValidSelectedMacTool Then 
        SetSelectedMacToolOK 
        CheckSelectedMacTool = true
    Else 
        TraceLog "请选择正确的mac工具"
        SetSelectedMacToolErr
        CheckSelectedMacTool = false
    End If
End Function

//////////////////////////////////
// Version Relations Function
Function SetPDMToolVersion(version)
    FormGlobal.LabelVersion.Caption = "版本: " + version
End Function

//////////////////////////////////
// Button Relations Function
Function EnableBtnOK()
    FormGlobal.BtnOK.Enabled = true
End Function

Function DisableBtnOK()
    FormGlobal.BtnOK.Enabled = false
End Function

Function EnableBtnReset()
    FormGlobal.BtnReset.Enabled = true
End Function

Function DisableBtnReset()
    FormGlobal.BtnReset.Enabled = false
End Function

Function EnableBtnSelectFile()
    FormGlobal.BtnSelectFile.Enabled = true
End Function

Function DisableBtnSelectFile()
    FormGlobal.BtnSelectFile.Enabled = false
End Function

Function EnableBtnSelectMacTool()
    FormGlobal.BtnSelectMacTool.Enabled = true
End Function

Function DisableBtnSelectMacTool()
    FormGlobal.BtnSelectMacTool.Enabled = false
End Function

//////////////////////////////////
// Device Relations Function
Function SetDeviceList(deviceList)
    FormGlobal.ComboxDevice.List = deviceList
End Function

Function GetDeviceIndex()
    GetDeviceIndex = FormGlobal.ComboxDevice.ListIndex
End Function

Function IsValidDeviceIndex()
    Dim deviceIndex
    deviceIndex = FormGlobal.ComboxDevice.ListIndex
    If 0 > deviceIndex Then
        IsValidDeviceIndex = false
    ElseIf DEIVCE_LIST_NUM <= deviceIndex Then
        IsValidDeviceIndex = false
    Else 
        IsValidDeviceIndex = true
    End If
End Function

Function GetDeviceName()
    Dim deviceList
    deviceList = Split(FormGlobal.ComboxDevice.List, "|")
    GetDeviceName = deviceList(FormGlobal.ComboxDevice.ListIndex)
End Function

Function SetDeviceOK()
    FormGlobal.ComboxDevice.NormalColor = "1BA154"
End Function

Function SetDeviceErr()
    FormGlobal.ComboxDevice.NormalColor = "0000FF"
End Function

Function SetDeviceNormal()
    FormGlobal.ComboxDevice.NormalColor = "A0A0A4"
End Function

Function ResetDevice()
    SetDeviceNormal 
	
    FormGlobal.ComboxDevice.ListIndex = DEVICE_ID_INVALID
End Function

//////////////////////////////////
// GroupBox Relations Function
Function SetGroupBoxInfo(deviceName)
    FormGlobal.GroupBoxInfo.Caption = "请填写" + deviceName + "机型相关信息"
End Function

Function ResetGroupBoxInfo()
    FormGlobal.GroupBoxInfo.Caption = "请先选择机型"
End Function

//////////////////////////////////
// SelectFile Relations Function
Function ResetSelecteFile()
    SetSelectedFileNormal 
	
    FormGlobal.LabelSelectedFile.Caption = TIPS_SELECT_FILE
    FormGlobal.LabelSelectedFile.Visible = false
    FormGlobal.BtnSelectFile.Visible = false	
End Function

Function ShowSelectFile()
    FormGlobal.LabelSelectedFile.Visible = true
    FormGlobal.BtnSelectFile.Visible = true
End Function

Function SetSelectedFile(filePath)
    FormGlobal.LabelSelectedFile.Caption = filePath
End Function

Function GetSelectedFile()
    GetSelectedFile = FormGlobal.LabelSelectedFile.Caption
End Function

Function IsValidSelectedFile()
    Dim filePath
    filePath = GetSelectedFile
    If filePath = TIPS_SELECT_FILE Then 
        IsValidSelectedFile = false
    ElseIf false = Plugin.File.IsFileExist(filePath) Then
        IsValidSelectedFile = false
    ElseIf false = IsValidDeviceIndex Then 
        IsValidSelectedFile = false	
    Else 
        // 增加正则匹配文件名是否合法
        Dim fileName, deviceNameL
        fileName = GetFileName(filePath)
        deviceNameL = LCase(GetDeviceName)

        Dim regEx, matches, matched
        Set regEx = New RegExp
        regEx.Pattern = "^" + deviceNameL + "-([0-9]{1,4}\.){3}[0-9]{1,4}-[0-9a-zA-Z]{1,}[_]{0,1}[0-9a-zA-Z]{0,}.img$"

        Set matches = regEx.Execute(fileName)
        If 1 <> matches.Count Then 
            IsValidSelectedFile = false
            Exit Function
        End If
		
        matched = matches(0)
        If matched = fileName Then 
            IsValidSelectedFile = true
        Else 
            IsValidSelectedFile = false	
        End If
    End If
End Function

Function SetSelectedFileOK()
    FormGlobal.LabelSelectedFile.TextColor = "1BA154"
End Function

Function SetSelectedFileErr()
    FormGlobal.LabelSelectedFile.TextColor = "0000FF"
End Function

Function SetSelectedFileNormal()
    FormGlobal.LabelSelectedFile.TextColor = "808080"
End Function

//////////////////////////////////
// SelectMacTools Relations Function
Function ResetSelecteMacTool()
    SetSelectedMacToolNormal
	
    FormGlobal.LabelSelectedMacTool.Caption = TIPS_SELECT_MACTOOL
    FormGlobal.LabelSelectedMacTool.Visible = false
    FormGlobal.BtnSelectMacTool.Visible = false	
End Function

Function ShowSelectMacTool()
    FormGlobal.LabelSelectedMacTool.Visible = true
    FormGlobal.BtnSelectMacTool.Visible = true
End Function

Function SetSelectedMacTool(filePath)
    FormGlobal.LabelSelectedMacTool.Caption = filePath
End Function

Function GetSelectedMacTool()
    GetSelectedMacTool = FormGlobal.LabelSelectedMacTool.Caption
End Function

Function IsValidSelectedMacTool()
    Dim macToolPath
    macToolPath = GetSelectedMacTool
    If macToolPath = TIPS_SELECT_MACTOOL Then 
        IsValidSelectedMacTool = false
    ElseIf false = Plugin.File.IsFileExist(macToolPath) Then
        IsValidSelectedMacTool = false
    ElseIf false = IsValidDeviceIndex Then 
        IsValidSelectedMacTool = false	
    Else 
        // 增加正则匹配文件名是否合法
        Dim fileName, deviceNameL
        fileName = GetFileName(macToolPath)
        deviceNameL = LCase(GetDeviceName)

        Dim regEx, matches, matched
        Set regEx = New RegExp
        regEx.Pattern = "^mac_tool_" + deviceNameL + "-([0-9]{1,4}\.){3}[0-9]{1,4}.zip$"

        Set matches = regEx.Execute(fileName)
        If 1 <> matches.Count Then 
            IsValidSelectedMacTool = false
            Exit Function
        End If
		
        matched = matches(0)
        If matched = fileName Then 
            IsValidSelectedMacTool = true
        Else 
            IsValidSelectedMacTool = false	
        End If
    End If
End Function

Function SetSelectedMacToolOK()
    FormGlobal.LabelSelectedMacTool.TextColor = "1BA154"
End Function

Function SetSelectedMacToolErr()
    FormGlobal.LabelSelectedMacTool.TextColor = "0000FF"
End Function

Function SetSelectedMacToolNormal()
    FormGlobal.LabelSelectedMacTool.TextColor = "808080"
End Function

//////////////////////////////////
// Input Relations Function
Function ResetProductName()
    SetRfFreqNormal
	
    FormGlobal.LabelProductName.Caption = TIPS_INPUT_PRODUCT_NAME
    FormGlobal.LabelProductName.Visible = false
    FormGlobal.InputProductName.Text = ""	
    FormGlobal.InputProductName.Visible = false	
End Function

Function ShowProductName()
    FormGlobal.LabelRfFreq.Visible = true
    FormGlobal.InputProductName.Visible = true
End Function

Function GetProductName()
    GetProductName = FormGlobal.InputProductName.Text
End Function

Function IsValidProductName()
    Dim productName
    productName = GetProductName
    
    If "" = productName Then 
    	IsValidProductName = false
    	Exit Function
    End If
	
    IsValidProductName = true
End Function

Function SetProductNameOK()
    FormGlobal.LabelProductName.TextColor = "1BA154"
End Function

Function SetProductNameErr()
    FormGlobal.LabelProductName.TextColor = "0000FF"
End Function

Function SetProductNameNormal()
    FormGlobal.LabelProductName.TextColor = "808080"
End Function

Function ResetBoardName()
    SetBoardNameNormal
	
    FormGlobal.LabelBoardName.Caption = TIPS_INPUT_BOARD_NAME
    FormGlobal.LabelBoardName.Visible = false
    FormGlobal.InputBoardName.Text = ""	
    FormGlobal.InputBoardName.Visible = false	
End Function

Function ShowBoardName()
    FormGlobal.LabelBoardName.Visible = true
    FormGlobal.InputBoardName.Visible = true
End Function

Function GetBoardName()
    GetRfFreq = FormGlobal.InputRfFreq.Text
End Function

Function IsValidBoardName()
    Dim boardName
    boardName = GetBoardName
    
    If "" = GetBoardName Then 
    	IsValidBoardName = false
    	Exit Function
    End If
	
    IsValidBoardName = true
End Function

Function SetBoardNameOK()
    FormGlobal.LabelBoardName.TextColor = "1BA154"
End Function

Function SetBoardNameErr()
    FormGlobal.LabelBoardName.TextColor = "0000FF"
End Function

Function SetBoardNameNormal()
    FormGlobal.LabelBoardName.TextColor = "808080"
End Function
//
Function ResetRfFreq()
    SetRfFreqNormal
	
    FormGlobal.LabelRfFreq.Caption = TIPS_INPUT_RF_FREQ
    FormGlobal.LabelRfFreq.Visible = false
    FormGlobal.InputRfFreq.Text = ""	
    FormGlobal.InputRfFreq.Visible = false	
End Function

Function ShowRfFreq()
    FormGlobal.LabelRfFreq.Visible = true
    FormGlobal.InputRfFreq.Visible = true
End Function

Function GetRfFreq()
    GetRfFreq = FormGlobal.InputRfFreq.Text
End Function

Function IsValidRfFreq()
    Dim freq
    freq = GetRfFreq
    
    Dim regEx, matches, matched
    Set regEx = New RegExp
    regEx.Pattern = "^[0-9]{0,}$"
    Set matches = regEx.Execute(freq)
    If 1 <> matches.Count Then 
        IsValidRfFreq = false
        Exit Function
    End If
	
    IsValidRfFreq = true
End Function

Function SetRfFreqOK()
    FormGlobal.LabelRfFreq.TextColor = "1BA154"
End Function

Function SetRfFreqErr()
    FormGlobal.LabelRfFreq.TextColor = "0000FF"
End Function

Function SetRfFreqNormal()
    FormGlobal.LabelRfFreq.TextColor = "808080"
End Function

//////////////////////////////////
// Word Relations Function
Function BuildWordDocMap(model, oem, version, mactoolVersion, _
    	fileName, fileTime, fileMD5, fileSizeReadableMB, fileSizeReadableByte, _
    	mactoolName, mactoolTime, mactoolMD5, mactoolSizeReadableMB, mactoolSizeReadableByte)
    Const WORD_DOC_MAP_KEY_SIZE = 2
    Const WORD_DOC_MAP_VALUE_SIZE = 10

    Dim map(2, 16)
    
    // Common
    map(0, 0) = "${modelL}"
    map(1, 0) = LCase(model)
	
    map(0, 1) = "${modelU}"
    map(1, 1) = UCase(model)
    
    map(0, 2) = "${oemL}"
    map(1, 2) = LCase(oem)
	
    map(0, 3) = "${oemU}"
    map(1, 3) = UCase(oem)
    
    map(0, 4) = "${version}"
    map(1, 4) = version
    
    map(0, 5) = "${mactoolVersion}"
    map(1, 5) = mactoolVersion
    
    // img
    map(0, 6) = "${fileName}"
    map(1, 6) = fileName
	
    map(0, 7) = "${fileTime}"
    map(1, 7) = fileTime
	
    map(0, 8) = "${fileMD5}"
    map(1, 8) = fileMD5
	
    map(0, 9) = "${fileSizeReadableMB}"
    map(1, 9) = fileSizeReadableMB
	
    map(0, 10) = "${fileSizeReadableByte}"
    map(1, 10) = fileSizeReadableByte
	
	// mactool
	map(0, 11) = "${mactoolName}"
    map(1, 11) = mactoolName
	
    map(0, 12) = "${mactoolTime}"
    map(1, 12) = mactoolTime
	
    map(0, 13) = "${mactoolMD5}"
    map(1, 13) = mactoolMD5
	
    map(0, 14) = "${mactoolSizeReadableMB}"
    map(1, 14) = mactoolSizeReadableMB
	
    map(0, 15) = "${mactoolReadableByte}"
    map(1, 15) = mactoolSizeReadableByte
	
    BuildWordDocMap = map	
End Function

Function DoGenerateWordDoc(curPath, keyWordsMap)
    Const DEVICE_WORD_TEMPLATE_PATH = "\templates"
    Const DEVICE_WORD_OUTPUT_PATH = "\outputs"
    Const DEVICE_R48G_WORD_TEMPLATE_LIST = "工程文件发行.doc"
	
    Const WORD_FILE_REPLACE_ALL = 2
	
    Dim deviceID, fileList, filePath, outputPath
    deviceID = GetDeviceIndex()
    Select Case deviceID
    Case DEVICE_ID_R48G
        filePath = curPath + DEVICE_WORD_TEMPLATE_PATH + "\R48G\"
        fileList = Split(DEVICE_R48G_WORD_TEMPLATE_LIST, "|")
        outputPath = curPath + DEVICE_WORD_OUTPUT_PATH + "\R48G\"

    Case DEVICE_ID_R49P
        // Unsupport now
        DoGenerateWordDoc = false
        Exit Function
			
    Case Else
        DoGenerateWordDoc = false
        Exit Function
    End Select

    Dim wordApp, wordDocument, wordFinder, wordRange
    For i = 0 To UBound(fileList)
        // 合法性检查
        If false = Plugin.File.IsFileExist(filePath + fileList(i)) Then 
            TraceLog "模板文件[" + filePath + fileList(i) + "]不存在!"
            DoGenerateWordDoc = false
            Exit Function
        End If
		
        // 复制文件
        Plugin.File.CopyFile filePath + fileList(i), outputPath + fileList(i)
		
        // 替换关键字
        Set wordApp = CreateObject("Word.Application")
        Set wordDocument = wordApp.Documents.Open(outputPath + fileList(i))
		For Each wordRange In wordApp.ActiveDocument.StoryRanges
			Set finderObj = wordRange.Find
			For j = 0 To (WORD_DOC_MAP_VALUE_SIZE - 1)	
				finderObj.Execute keyWordsMap(0, j),"","","","","","","","", keyWordsMap(1, j)
			Next
        Next

		wordDocument.Save 
        wordApp.quit
    Next
    DoGenerateWordDoc = true
End Function

//////////////////////////////////
// Common Function
Function ClearLog()
    FormGlobal.InputLog.text = ""
End Function

Function TraceLog(logContent)
    Dim logline
    logline = "日志" + "[" + CStr(Hour(now)) + ":" + CStr(Minute(now)) + ":" + CStr(Second(now)) + "]"
    logline = logline + ": " + CStr(logContent)

    FormGlobal.InputLog.text = FormGlobal.InputLog.text + vbcrlf + logline
End Function

Function Round(value, keep)
    If 0 <> InStr(value, ".") Then
        Dim integerPart, decimalPart
        integerPart = split(value, ".")(0)
        decimalPart = split(value, ".")(1)
        If Len(decimalPart) < keep Then 
            Round = integerPart & "." & String(keep - Len(decimalPart), "0")
        ElseIf Len(decimalPart) = keep Then   
            Round = value
        ElseIf Len(decimalPart) > keep Then
            Dim tmpLen, tmpValue
            If Mid(decimalPart, keep + 1, 1) >= 5 Then 
                If Len(decimalPart) = 1 Then 
                    Round = integerPart + 1
                Else 
                    tmpLen = Len(Left(decimalPart, keep))
                    tmpValue = Left(decimalPart, keep) + 1
                    If (Len(tmpValue) <> tmpLen) Then 
                        tmpValue = String(tmpLen - Len(tmpValue), "0") & tmpValue
                    End If
                    Round = integerPart & "." & tmpValue
                End If
            Else 
                If Len(decimalPart) = 1 Then 
                    Round = integerPart
                Else 
                    tmpLen = Len(Left(decimalPart, keep))
                    tmpValue = Left(decimalPart, keep) + 1
                    If (Len(tmpValue) <> tmpValue) Then 
                        tmpValue = String(tmpLen - Len(tmpValue), "0") & tmpValue
                    End If
                    Round = integerPart & "." & tmpValue
                End If
            End If
        End If
    Else 
        Round = value & "." & String(keep, "0")
    End If
End Function

Function TrimBytes(value)
    Dim comma, num, lenth
    Dim leftPart, rightPart
    lenth = Len(value)
	
    If lenth > 3 Then 
        For i = 3 To lenth step 3	
            leftPart = Left(value, lenth - i + ((i-3)/3))
            rightPart = right(value, i + ((i-3)/3))
            value = leftPart & "," & rightPart
        Next	
    End If
	
    TrimBytes = CStr(value)
End Function

Function GetFileName(filePath)
    Dim fso
    Set fso = CreateObject("Scripting.FileSystemObject")
    GetFileName = fso.GetFileName(filePath)
End Function

Function GetFileTime(filePath)
    Dim fso
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set fileObj = fso.GetFile(filePath)
    GetFileTime = CStr(fileObj.DateCreated)
End Function

Function GetModel(fileName)
    Dim regEx, matches
    Set regEx = New RegExp
    regEx.Pattern = "^r[4][89]"
    Set matches = regEx.Execute(fileName)
    If 1 <> matches.Count Then 
        GetModel = "Unknown"
        Exit Function
    End If
    GetModel = matches(0)
End Function

Function GetVersion(fileName)
    Dim regEx, matches
    Set regEx = New RegExp
    regEx.Pattern = "([0-9]{1,4}\.){3}[0-9]{1,4}"
    Set matches = regEx.Execute(fileName)
    If 1 <> matches.Count Then 
        GetVersion = "Unknown"
        Exit Function
    End If
    GetVersion = matches(0)
End Function

Function GetOem(fileName)
    Dim regEx, matches
    Set regEx = New RegExp
    regEx.Pattern = "-[0-9a-zA-Z]{1,}[_]{0,1}[0-9a-zA-Z]{0,}.img"
    Set matches = regEx.Execute(fileName)
    If 1 <> matches.Count Then 
        GetOem = "Unknown"
        Exit Function
    End If
	
    regEx.Pattern = "[0-9a-zA-Z]{1,}[_]{0,1}[0-9a-zA-Z]{0,}"
    Set matches = regEx.Execute(matches(0))
    If 1 <> matches.Count Then 
        GetOem = "Unknown"
        Exit Function
    End If
	
    GetOem = matches(0)
End Function

Function ResetAll()
    ResetDevice 
    ResetAllWithoutDevice
End Function

Function ResetAllWithoutDevice()
    ResetGroupBoxInfo 
    ResetSelecteFile 
    ResetSelecteMacTool 
    ResetProductName 
    ResetBoardName
    ResetRfFreq
End Function

Function Generate()
    If true = gRunFlag Then 
        TraceLog "正在生成中..."
    Else 
        gRunFlag = true
        BeginThread DoGenerate
    End If
End Function

//////////////////////////////////
// Common Sub, for Thread
Sub DoGenerate()
    DisableBtnOK 
    DisableBtnReset 
    DisableBtnSelectFile 
    DisableBtnSelectMacTool
		
    Dim filePath, fileName, fileTime, fileMD5, fileSize, fileSizeReadableByte, fileSizeReadableMB
    filePath = GetSelectedFile
    fileName = GetFileName(filePath)
    fileTime = GetFileTime(filePath)
    fileMD5 = Plugin.Encrypt.Md5File(filePath)
    fileSize = Plugin.File.GetFileLength(filePath)

    fileSizeReadableByte = TrimBytes(fileSize) + " Bytes"
    fileSizeReadableMB = Round(fileSize/1024/1024, 1) + " MB"

	Dim mactoolPath, mactoolName, mactoolTime, mactoolMD5, mactoolSize, mactoolSizeReadableByte, mactoolSizeReadableMB
	mactoolPath = GetSelectedMacTool
	mactoolName = GetFileName(mactoolPath)
	mactoolTime = GetFileTime(mactoolPath)
	mactoolMD5 = Plugin.Encrypt.Md5File(filePath)
    mactoolSize = Plugin.File.GetFileLength(filePath)
    mactoolSizeReadableByte = TrimBytes(fileSize) + " Bytes"
    mactoolSizeReadableMB = Round(fileSize/1024/1024, 1) + " MB"

    Dim model, oem,  version, mactoolVersion
    model = GetModel(fileName)
    oem = GetOem(fileName)
    version = GetVersion(fileName)
    mactoolVersion = GetVersion(mactoolName)
	
    // 信息输出
    TraceLog "-----------关键信息-------------"
    TraceLog "机型 - " + model
    TraceLog "版本 - " + version
    TraceLog "OEM - " + oem
    TraceLog " "
    TraceLog "img文件名称 - " + fileName
    TraceLog "img文件创建时间 - " + fileTime
    TraceLog "img文件MD5 - " + fileMD5
    TraceLog "img文件大小 - " + fileSizeReadableMB + "(" + fileSizeReadableByte + ")"
 	TraceLog " "
 	TraceLog "mactool名称 - " + mactoolName
    TraceLog "mactool创建时间 - " + mactoolTime
    TraceLog "mactoolMD5 - " + mactoolMD5
    TraceLog "mactool大小 - " + mactoolSizeReadableMB + "(" + mactoolSizeReadableByte + ")" 
	
    Dim generateRes, keyWordsMap
    keyWordsMap = BuildWordDocMap(model, oem, version, mactoolVersion, _
    	fileName, fileTime, fileMD5, fileSizeReadableMB, fileSizeReadableByte, _
    	mactoolName, mactoolTime, mactoolMD5, mactoolSizeReadableMB, mactoolSizeReadableByte)
	
    // 根据模板生成Word文档
    //generateRes = GenerateWordDoc(CStr(Plugin.Sys.GetDir(0)), keyWordsMap)
    generateRes = DoGenerateWordDoc("C:\Users\LinKy\Desktop\48g_CSC_V1.0-48.195.1.23版本上PDM", keyWordsMap)
    If false = generateRes Then 
        TraceLog "生成Word文件失败, 请检查模板文件及日志信息!"
        EnableBtnSelectMacTool
        EnableBtnSelectFile
        EnableBtnReset 
        EnableBtnOK 
        Exit Sub
    End If
	
    // 根据模板生成Excel文档
	
    // 结束
    TraceLog "生成结束, 请审核outputs文件夹中内容!"
	
	EnableBtnSelectMacTool
    EnableBtnSelectFile
    EnableBtnReset 
    EnableBtnOK 
	
    gRunFlag = false
End Sub

